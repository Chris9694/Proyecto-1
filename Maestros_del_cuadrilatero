import processing.sound.*;
SoundFile luchas;
Luchador mascara;
Luchador psycho;
Luchador octagon;
Luchador mysterio;
Luchador santo;
Luchador luch1;
Luchador luch2;
int pantalla = 0;
int luchador1;
int luchador2;
PImage cuadrilatero;
PFont titulo, subtitulo, general;
int turno = 0;
int ganador = 0;
int contador1 = 0;
int contador2 = 0;

void setup(){
size(1280,680);

//IMAGENES

cuadrilatero = loadImage("cuadrilatero.jpg");

//LUCHADORES
mascara = new Luchador("Mascara Satanica",200,7,8,12,4);
psycho = new Luchador("Psycho Clown",200,7,9,13,3);
octagon = new Luchador("Octagon",200,7,9,12,2);
mysterio = new Luchador("Rey Mysterio",200,7,9,13,1);
santo = new Luchador("El Santo",200,8,9,12,0);

//TEXTOS
titulo = createFont("mexican fiesta.ttf",200);
subtitulo = createFont("yorkwhiteletter.ttf",100);
general = createFont("Pixeled.ttf",30);

//AUDIO
//luchas = new SoundFile(this, "los luchadores.mp3");
//luchas.play();
//luchas.amp(0.4);

}

void draw(){
  
switch(pantalla){
  case 0:
  inicio();
  break;
  
  case 1:
  instrucciones();
  break;
  
  case 2:
  seleccion1();
  break;
  
  case 3:
  seleccion2();
  break;
  
  case 4:
  lucha();
  break;
  
  case 5:
  resultado();
  break;
  }
}


class Luchador{
  String nombre;
  int salud;
  int golpe1;
  int golpe2;
  int golpex;
  int mascara;
  
  Luchador(String nombre_, int salud_, int golpe1_, int golpe2_, int golpex_, int mascara_)
  {
    nombre = nombre_;
    salud = salud_;
    golpe1 = golpe1_;
    golpe2 = golpe2_;
    golpex = golpex_;
    mascara = mascara_;
  }

void Dibujar(){
    switch(mascara){
    case 0:
    
    //scale(0.7);
    noStroke();
      //fila 1
fill(0);
rect(246,70,10,10);
fill(0);
rect(256,70,10,10);
fill(0);
rect(266,70,10,10);
fill(0);
rect(276,70,10,10);
fill(0);
rect(286,70,10,10);
fill(0);
rect(296,70,10,10);
fill(0);
rect(306,70,10,10);

//fila 2
fill(0);
rect(136,80,10,10);
fill(0);
rect(146,80,10,10);
fill(0);
rect(236,80,10,10);
fill(#C0BFBF);
rect(246,80,10,10);
fill(#C0BFBF);
rect(256,80,10,10);
fill(#C0BFBF);
rect(266,80,10,10);
fill(#C0BFBF);
rect(276,80,10,10);
fill(#C0BFBF);
rect(286,80,10,10);
fill(#C0BFBF);
rect(296,80,10,10);
fill(#C0BFBF);
rect(306,80,10,10);
fill(0);
rect(316,80,10,10);
fill(0);
rect(406,80,10,10);
fill(0);
rect(416,80,10,10);

//fila 3
fill(0);
rect(126,90,10,10);
fill(#DEB786);
rect(136,90,10,10);
fill(#DEB786);
rect(146,90,10,10);
fill(0);
rect(156,90,10,10);
fill(0);
rect(226,90,10,10);
fill(#C0BFBF);
rect(236,90,10,10);
fill(#C0BFBF);
rect(246,90,10,10);
fill(#C0BFBF);
rect(256,90,10,10);
fill(#C0BFBF);
rect(266,90,10,10);
fill(#C0BFBF);
rect(276,90,10,10);
fill(#C0BFBF);
rect(286,90,10,10);
fill(#C0BFBF);
rect(296,90,10,10);
fill(#C0BFBF);
rect(306,90,10,10);
fill(#C0BFBF);
rect(316,90,10,10);
fill(0);
rect(326,90,10,10);
fill(0);
rect(396,90,10,10);
fill(#DEB786);
rect(406,90,10,10);
fill(#DEB786);
rect(416,90,10,10);
fill(0);
rect(426,90,10,10);

//fila 4
fill(0);
rect(126,100,10,10);
fill(#DEB786);
rect(136,100,10,10);
fill(#DEB786);
rect(146,100,10,10);
fill(0);
rect(156,100,10,10);
fill(0);
rect(216,100,10,10);
fill(#C0BFBF);
rect(226,100,10,10);
fill(#C0BFBF);
rect(236,100,10,10);
fill(#C0BFBF);
rect(246,100,10,10);
fill(#C0BFBF);
rect(256,100,10,10);
fill(#C0BFBF);
rect(266,100,10,10);
fill(#C0BFBF);
rect(276,100,10,10);
fill(#C0BFBF);
rect(286,100,10,10);
fill(#C0BFBF);
rect(296,100,10,10);
fill(#C0BFBF);
rect(306,100,10,10);
fill(#C0BFBF);
rect(316,100,10,10);
fill(#C0BFBF);
rect(326,100,10,10);
fill(0);
rect(336,100,10,10);
fill(0);
rect(396,100,10,10);
fill(#DEB786);
rect(406,100,10,10);
fill(#DEB786);
rect(416,100,10,10);
fill(0);
rect(426,100,10,10);

//fila 5
fill(0);
rect(126,110,10,10);
fill(#DEB786);
rect(136,110,10,10);
fill(#DEB786);
rect(146,110,10,10);
fill(0);
rect(156,110,10,10);
fill(0);
rect(166,110,10,10);
fill(0);
rect(216,110,10,10);
fill(#C0BFBF);
rect(226,110,10,10);
fill(#C0BFBF);
rect(236,110,10,10);
fill(#C0BFBF);
rect(246,110,10,10);
fill(#C0BFBF);
rect(256,110,10,10);
fill(#C0BFBF);
rect(266,110,10,10);
fill(#C0BFBF);
rect(276,110,10,10);
fill(#C0BFBF);
rect(286,110,10,10);
fill(#C0BFBF);
rect(296,110,10,10);
fill(#C0BFBF);
rect(306,110,10,10);
fill(#C0BFBF);
rect(316,110,10,10);
fill(#C0BFBF);
rect(326,110,10,10);
fill(0);
rect(336,110,10,10);
fill(0);
rect(386,110,10,10);
fill(0);
rect(396,110,10,10);
fill(#DEB786);
rect(406,110,10,10);
fill(#DEB786);
rect(416,110,10,10);
fill(0);
rect(426,110,10,10);

//fila 6
fill(0);
rect(126,120,10,10);
fill(#DEB786);
rect(136,120,10,10);
fill(#DEB786);
rect(146,120,10,10);
fill(0);
rect(156,120,10,10);
fill(#DEB786);
rect(166,120,10,10);
fill(0);
rect(176,120,10,10);
fill(0);
rect(216,120,10,10);
fill(#C0BFBF);
rect(226,120,10,10);
fill(#EFEFEE);
rect(236,120,10,10);
fill(#C0BFBF);
rect(246,120,10,10);
fill(#C0BFBF);
rect(256,120,10,10);
fill(#C0BFBF);
rect(266,120,10,10);
fill(#C0BFBF);
rect(276,120,10,10);
fill(#C0BFBF);
rect(286,120,10,10);
fill(#C0BFBF);
rect(296,120,10,10);
fill(#C0BFBF);
rect(306,120,10,10);
fill(#EFEFEE);
rect(316,120,10,10);
fill(#C0BFBF);
rect(326,120,10,10);
fill(0);
rect(336,120,10,10);
fill(0);
rect(376,120,10,10);
fill(#DEB786);
rect(386,120,10,10);
fill(0);
rect(396,120,10,10);
fill(#DEB786);
rect(406,120,10,10);
fill(#DEB786);
rect(416,120,10,10);
fill(0);
rect(426,120,10,10);

//fila 7
fill(0);
rect(126,130,10,10);
fill(#DEB786);
rect(136,130,10,10);
fill(#DEB786);
rect(146,130,10,10);
fill(#DEB786);
rect(156,130,10,10);
fill(0);
rect(166,130,10,10);
fill(0);
rect(216,130,10,10);
fill(#C0BFBF);
rect(226,130,10,10);
fill(#EFEFEE);
rect(236,130,10,10);
fill(#EFEFEE);
rect(246,130,10,10);
fill(#EFEFEE);
rect(256,130,10,10);
fill(#EFEFEE);
rect(266,130,10,10);
fill(#C0BFBF);
rect(276,130,10,10);
fill(#EFEFEE);
rect(286,130,10,10);
fill(#EFEFEE);
rect(296,130,10,10);
fill(#EFEFEE);
rect(306,130,10,10);
fill(#EFEFEE);
rect(316,130,10,10);
fill(#C0BFBF);
rect(326,130,10,10);
fill(0);
rect(336,130,10,10);
fill(0);
rect(386,130,10,10);
fill(#DEB786);
rect(396,130,10,10);
fill(#DEB786);
rect(406,130,10,10);
fill(#DEB786);
rect(416,130,10,10);
fill(0);
rect(426,130,10,10);

//fila 8
fill(0);
rect(136,140,10,10);
fill(#DEB786);
rect(146,140,10,10);
fill(0);
rect(156,140,10,10);
fill(0);
rect(216,140,10,10);
fill(#C0BFBF);
rect(226,140,10,10);
fill(#EFEFEE);
rect(236,140,10,10);
fill(255);
rect(246,140,10,10);
fill(0);
rect(256,140,10,10);
fill(#EFEFEE);
rect(266,140,10,10);
fill(#EFEFEE);
rect(276,140,10,10);
fill(#EFEFEE);
rect(286,140,10,10);
fill(0);
rect(296,140,10,10);
fill(255);
rect(306,140,10,10);
fill(#EFEFEE);
rect(316,140,10,10);
fill(#C0BFBF);
rect(326,140,10,10);
fill(0);
rect(336,140,10,10);
fill(0);
rect(396,140,10,10);
fill(#DEB786);
rect(406,140,10,10);
fill(0);
rect(416,140,10,10);

//fila 9
fill(0);
rect(126,150,10,10);
fill(#DEB786);
rect(136,150,10,10);
fill(#DEB786);
rect(146,150,10,10);
fill(0);
rect(156,150,10,10);
fill(0);
rect(216,150,10,10);
fill(#C0BFBF);
rect(226,150,10,10);
fill(#EFEFEE);
rect(236,150,10,10);
fill(#EFEFEE);
rect(246,150,10,10);
fill(#EFEFEE);
rect(256,150,10,10);
fill(#EFEFEE);
rect(266,150,10,10);
fill(#DEB786);
rect(276,150,10,10);
fill(#EFEFEE);
rect(286,150,10,10);
fill(#EFEFEE);
rect(296,150,10,10);
fill(#EFEFEE);
rect(306,150,10,10);
fill(#EFEFEE);
rect(316,150,10,10);
fill(#C0BFBF);
rect(326,150,10,10);
fill(0);
rect(336,150,10,10);
fill(0);
rect(396,150,10,10);
fill(#DEB786);
rect(406,150,10,10);
fill(#DEB786);
rect(416,150,10,10);
fill(0);
rect(426,150,10,10);

//fila 10
fill(0);
rect(126,160,10,10);
fill(#DEB786);
rect(136,160,10,10);
fill(#DEB786);
rect(146,160,10,10);
fill(0);
rect(156,160,10,10);
fill(0);
rect(216,160,10,10);
fill(#C0BFBF);
rect(226,160,10,10);
fill(#C0BFBF);
rect(236,160,10,10);
fill(#C0BFBF);
rect(246,160,10,10);
fill(#EFEFEE);
rect(256,160,10,10);
fill(#DEB786);
rect(266,160,10,10);
fill(#DEB786);
rect(276,160,10,10);
fill(#DEB786);
rect(286,160,10,10);
fill(#EFEFEE);
rect(296,160,10,10);
fill(#C0BFBF);
rect(306,160,10,10);
fill(#C0BFBF);
rect(316,160,10,10);
fill(#C0BFBF);
rect(326,160,10,10);
fill(0);
rect(336,160,10,10);
fill(0);
rect(396,160,10,10);
fill(#DEB786);
rect(406,160,10,10);
fill(#DEB786);
rect(416,160,10,10);
fill(0);
rect(426,160,10,10);

//fila 11
fill(0);
rect(126,170,10,10);
fill(#DEB786);
rect(136,170,10,10);
fill(#DEB786);
rect(146,170,10,10);
fill(#DEB786);
rect(156,170,10,10);
fill(0);
rect(166,170,10,10);
fill(0);
rect(226,170,10,10);
fill(#C0BFBF);
rect(236,170,10,10);
fill(#C0BFBF);
rect(246,170,10,10);
fill(#EFEFEE);
rect(256,170,10,10);
fill(#EFEFEE);
rect(266,170,10,10);
fill(#EFEFEE);
rect(276,170,10,10);
fill(#EFEFEE);
rect(286,170,10,10);
fill(#EFEFEE);
rect(296,170,10,10);
fill(#C0BFBF);
rect(306,170,10,10);
fill(#C0BFBF);
rect(316,170,10,10);
fill(0);
rect(326,170,10,10);
fill(0);
rect(386,170,10,10);
fill(#DEB786);
rect(396,170,10,10);
fill(#DEB786);
rect(406,170,10,10);
fill(#DEB786);
rect(416,170,10,10);
fill(0);
rect(426,170,10,10);

//fila 11
fill(0);
rect(126,180,10,10);
fill(#DEB786);
rect(136,180,10,10);
fill(#DEB786);
rect(146,180,10,10);
fill(#DEB786);
rect(156,180,10,10);
fill(0);
rect(166,180,10,10);
fill(0);
rect(226,180,10,10);
fill(#C0BFBF);
rect(236,180,10,10);
fill(#C0BFBF);
rect(246,180,10,10);
fill(#EFEFEE);
rect(256,180,10,10);
fill(#DEB786);
rect(266,180,10,10);
fill(#DEB786);
rect(276,180,10,10);
fill(#DEB786);
rect(286,180,10,10);
fill(#EFEFEE);
rect(296,180,10,10);
fill(#C0BFBF);
rect(306,180,10,10);
fill(#C0BFBF);
rect(316,180,10,10);
fill(0);
rect(326,180,10,10);
fill(0);
rect(386,180,10,10);
fill(#DEB786);
rect(396,180,10,10);
fill(#DEB786);
rect(406,180,10,10);
fill(#DEB786);
rect(416,180,10,10);
fill(0);
rect(426,180,10,10);

//fila 12
fill(0);
rect(126,190,10,10);
fill(#DEB786);
rect(136,190,10,10);
fill(#DEB786);
rect(146,190,10,10);
fill(#DEB786);
rect(156,190,10,10);
fill(0);
rect(166,190,10,10);
fill(0);
rect(176,190,10,10);
fill(0);
rect(186,190,10,10);
fill(0);
rect(196,190,10,10);
fill(0);
rect(206,190,10,10);
fill(0);
rect(236,190,10,10);
fill(#C0BFBF);
rect(246,190,10,10);
fill(#EFEFEE);
rect(256,190,10,10);
fill(#EFEFEE);
rect(266,190,10,10);
fill(#EFEFEE);
rect(276,190,10,10);
fill(#EFEFEE);
rect(286,190,10,10);
fill(#EFEFEE);
rect(296,190,10,10);
fill(#C0BFBF);
rect(306,190,10,10);
fill(0);
rect(316,190,10,10);
fill(0);
rect(346,190,10,10);
fill(0);
rect(356,190,10,10);
fill(0);
rect(366,190,10,10);
fill(0);
rect(376,190,10,10);
fill(0);
rect(386,190,10,10);
fill(#DEB786);
rect(396,190,10,10);
fill(#DEB786);
rect(406,190,10,10);
fill(#DEB786);
rect(416,190,10,10);
fill(0);
rect(426,190,10,10);

//fila 13
fill(0);
rect(126,200,10,10);
fill(#DEB786);
rect(136,200,10,10);
fill(#DEB786);
rect(146,200,10,10);
fill(#DEB786);
rect(156,200,10,10);
fill(0);
rect(166,200,10,10);
fill(#DEB786);
rect(176,200,10,10);
fill(#DEB786);
rect(186,200,10,10);
fill(#DEB786);
rect(196,200,10,10);
fill(#DEB786);
rect(206,200,10,10);
fill(0);
rect(216,200,10,10);
fill(0);
rect(226,200,10,10);
fill(#DEB786);
rect(236,200,10,10);
fill(0);
rect(246,200,10,10);
fill(#C0BFBF);
rect(256,200,10,10);
fill(#C0BFBF);
rect(266,200,10,10);
fill(#C0BFBF);
rect(276,200,10,10);
fill(#C0BFBF);
rect(286,200,10,10);
fill(#C0BFBF);
rect(296,200,10,10);
fill(0);
rect(306,200,10,10);
fill(#DEB786);
rect(316,200,10,10);
fill(0);
rect(326,200,10,10);
fill(0);
rect(336,200,10,10);
fill(#DEB786);
rect(346,200,10,10);
fill(#DEB786);
rect(356,200,10,10);
fill(#DEB786);
rect(366,200,10,10);
fill(#DEB786);
rect(376,200,10,10);
fill(0);
rect(386,200,10,10);
fill(#DEB786);
rect(396,200,10,10);
fill(#DEB786);
rect(406,200,10,10);
fill(#DEB786);
rect(416,200,10,10);
fill(0);
rect(426,200,10,10);

//fila 14
fill(0);
rect(126,210,10,10);
fill(#DEB786);
rect(136,210,10,10);
fill(#DEB786);
rect(146,210,10,10);
fill(#DEB786);
rect(156,210,10,10);
fill(0);
rect(166,210,10,10);
fill(#DEB786);
rect(176,210,10,10);
fill(#DEB786);
rect(186,210,10,10);
fill(#DEB786);
rect(196,210,10,10);
fill(#DEB786);
rect(206,210,10,10);
fill(#DEB786);
rect(216,210,10,10);
fill(#DEB786);
rect(226,210,10,10);
fill(#DEB786);
rect(236,210,10,10);
fill(#DEB786);
rect(246,210,10,10);
fill(0);
rect(256,210,10,10);
fill(0);
rect(266,210,10,10);
fill(0);
rect(276,210,10,10);
fill(0);
rect(286,210,10,10);
fill(0);
rect(296,210,10,10);
fill(#DEB786);
rect(306,210,10,10);
fill(#DEB786);
rect(316,210,10,10);
fill(#DEB786);
rect(326,210,10,10);
fill(#DEB786);
rect(336,210,10,10);
fill(#DEB786);
rect(346,210,10,10);
fill(#DEB786);
rect(356,210,10,10);
fill(#DEB786);
rect(366,210,10,10);
fill(#DEB786);
rect(376,210,10,10);
fill(0);
rect(386,210,10,10);
fill(#DEB786);
rect(396,210,10,10);
fill(#DEB786);
rect(406,210,10,10);
fill(#DEB786);
rect(416,210,10,10);
fill(0);
rect(426,210,10,10);

//fila 14
fill(0);
rect(136,220,10,10);
fill(0);
rect(146,220,10,10);
fill(#DEB786);
rect(156,220,10,10);
fill(#DEB786);
rect(166,220,10,10);
fill(#DEB786);
rect(176,220,10,10);
fill(#DEB786);
rect(186,220,10,10);
fill(#DEB786);
rect(196,220,10,10);
fill(#DEB786);
rect(206,220,10,10);
fill(#DEB786);
rect(216,220,10,10);
fill(#DEB786);
rect(226,220,10,10);
fill(#DEB786);
rect(236,220,10,10);
fill(#DEB786);
rect(246,220,10,10);
fill(#DEB786);
rect(256,220,10,10);
fill(#DEB786);
rect(266,220,10,10);
fill(#DEB786);
rect(276,220,10,10);
fill(#DEB786);
rect(286,220,10,10);
fill(#DEB786);
rect(296,220,10,10);
fill(#DEB786);
rect(306,220,10,10);
fill(#DEB786);
rect(316,220,10,10);
fill(#DEB786);
rect(326,220,10,10);
fill(#DEB786);
rect(336,220,10,10);
fill(#DEB786);
rect(346,220,10,10);
fill(#DEB786);
rect(356,220,10,10);
fill(#DEB786);
rect(366,220,10,10);
fill(#DEB786);
rect(376,220,10,10);
fill(#DEB786);
rect(386,220,10,10);
fill(#DEB786);
rect(396,220,10,10);
fill(0);
rect(406,220,10,10);
fill(0);
rect(416,220,10,10);

//fila 14
fill(0);
rect(156,230,10,10);
fill(0);
rect(166,230,10,10);
fill(0);
rect(176,230,10,10);
fill(0);
rect(186,230,10,10);
fill(0);
rect(196,230,10,10);
fill(#DEB786);
rect(206,230,10,10);
fill(#DEB786);
rect(216,230,10,10);
fill(#DEB786);
rect(226,230,10,10);
fill(#DEB786);
rect(236,230,10,10);
fill(#DEB786);
rect(246,230,10,10);
fill(#DEB786);
rect(256,230,10,10);
fill(#DEB786);
rect(266,230,10,10);
fill(0);
rect(276,230,10,10);
fill(#DEB786);
rect(286,230,10,10);
fill(#DEB786);
rect(296,230,10,10);
fill(#DEB786);
rect(306,230,10,10);
fill(#DEB786);
rect(316,230,10,10);
fill(#DEB786);
rect(326,230,10,10);
fill(#DEB786);
rect(336,230,10,10);
fill(#DEB786);
rect(346,230,10,10);
fill(0);
rect(356,230,10,10);
fill(0);
rect(366,230,10,10);
fill(0);
rect(376,230,10,10);
fill(0);
rect(386,230,10,10);
fill(0);
rect(396,230,10,10);

//fila 15
fill(0);
rect(206,240,10,10);
fill(#DEB786);
rect(216,240,10,10);
fill(#DEB786);
rect(226,240,10,10);
fill(#DEB786);
rect(236,240,10,10);
fill(#DEB786);
rect(246,240,10,10);
fill(#DEB786);
rect(256,240,10,10);
fill(#DEB786);
rect(266,240,10,10);
fill(0);
rect(276,240,10,10);
fill(#DEB786);
rect(286,240,10,10);
fill(#DEB786);
rect(296,240,10,10);
fill(#DEB786);
rect(306,240,10,10);
fill(#DEB786);
rect(316,240,10,10);
fill(#DEB786);
rect(326,240,10,10);
fill(#DEB786);
rect(336,240,10,10);
fill(0);
rect(346,240,10,10);

//fila 15
fill(0);
rect(206,250,10,10);
fill(#DEB786);
rect(216,250,10,10);
fill(#846951);
rect(226,250,10,10);
fill(#DEB786);
rect(236,250,10,10);
fill(#DEB786);
rect(246,250,10,10);
fill(#DEB786);
rect(256,250,10,10);
fill(#DEB786);
rect(266,250,10,10);
fill(0);
rect(276,250,10,10);
fill(#DEB786);
rect(286,250,10,10);
fill(#DEB786);
rect(296,250,10,10);
fill(#DEB786);
rect(306,250,10,10);
fill(#DEB786);
rect(316,250,10,10);
fill(#846951);
rect(326,250,10,10);
fill(#DEB786);
rect(336,250,10,10);
fill(0);
rect(346,250,10,10);

//fila 16
fill(0);
rect(216,260,10,10);
fill(#DEB786);
rect(226,260,10,10);
fill(#DEB786);
rect(236,260,10,10);
fill(#DEB786);
rect(246,260,10,10);
fill(#DEB786);
rect(256,260,10,10);
fill(#DEB786);
rect(266,260,10,10);
fill(0);
rect(276,260,10,10);
fill(#DEB786);
rect(286,260,10,10);
fill(#DEB786);
rect(296,260,10,10);
fill(#DEB786);
rect(306,260,10,10);
fill(#DEB786);
rect(316,260,10,10);
fill(#DEB786);
rect(326,260,10,10);
fill(0);
rect(336,260,10,10);

//fila 17
fill(0);
rect(226,270,10,10);
fill(0);
rect(236,270,10,10);
fill(0);
rect(246,270,10,10);
fill(0);
rect(256,270,10,10);
fill(0);
rect(266,270,10,10);
fill(#DEB786);
rect(276,270,10,10);
fill(0);
rect(286,270,10,10);
fill(0);
rect(296,270,10,10);
fill(0);
rect(306,270,10,10);
fill(0);
rect(316,270,10,10);
fill(0);
rect(326,270,10,10);

//fila 18
fill(0);
rect(226,280,10,10);
fill(#DEB786);
rect(236,280,10,10);
fill(#DEB786);
rect(246,280,10,10);
fill(#DEB786);
rect(256,280,10,10);
fill(#DEB786);
rect(266,280,10,10);
fill(#DEB786);
rect(276,280,10,10);
fill(#DEB786);
rect(286,280,10,10);
fill(#DEB786);
rect(296,280,10,10);
fill(#DEB786);
rect(306,280,10,10);
fill(#DEB786);
rect(316,280,10,10);
fill(0);
rect(326,280,10,10);

//fila 19
fill(0);
rect(226,290,10,10);
fill(#DEB786);
rect(236,290,10,10);
fill(#DEB786);
rect(246,290,10,10);
fill(#DEB786);
rect(256,290,10,10);
fill(#DEB786);
rect(266,290,10,10);
fill(#DEB786);
rect(276,290,10,10);
fill(#DEB786);
rect(286,290,10,10);
fill(#DEB786);
rect(296,290,10,10);
fill(#DEB786);
rect(306,290,10,10);
fill(#DEB786);
rect(316,290,10,10);
fill(0);
rect(326,290,10,10);

//fila 20
fill(0);
rect(226,300,10,10);
fill(#DEB786);
rect(236,300,10,10);
fill(#DEB786);
rect(246,300,10,10);
fill(#DEB786);
rect(256,300,10,10);
fill(#DEB786);
rect(266,300,10,10);
fill(#DEB786);
rect(276,300,10,10);
fill(#DEB786);
rect(286,300,10,10);
fill(#DEB786);
rect(296,300,10,10);
fill(#DEB786);
rect(306,300,10,10);
fill(#DEB786);
rect(316,300,10,10);
fill(0);
rect(326,300,10,10);

//fila 21
fill(0);
rect(226,300,10,10);
fill(#DEB786);
rect(236,300,10,10);
fill(#DEB786);
rect(246,300,10,10);
fill(#DEB786);
rect(256,300,10,10);
fill(#DEB786);
rect(266,300,10,10);
fill(#846951);
rect(276,300,10,10);
fill(#DEB786);
rect(286,300,10,10);
fill(#DEB786);
rect(296,300,10,10);
fill(#DEB786);
rect(306,300,10,10);
fill(#DEB786);
rect(316,300,10,10);
fill(0);
rect(326,300,10,10);

//fila 21
fill(0);
rect(226,310,10,10);
fill(0);
rect(236,310,10,10);
fill(#DEB786);
rect(246,310,10,10);
fill(#DEB786);
rect(256,310,10,10);
fill(#DEB786);
rect(266,310,10,10);
fill(#DEB786);
rect(276,310,10,10);
fill(#DEB786);
rect(286,310,10,10);
fill(#DEB786);
rect(296,310,10,10);
fill(#DEB786);
rect(306,310,10,10);
fill(0);
rect(316,310,10,10);
fill(0);
rect(326,310,10,10);

//fila 22
fill(0);
rect(226,320,10,10);
fill(#C0BFBF);
rect(236,320,10,10);
fill(0);
rect(246,320,10,10);
fill(0);
rect(256,320,10,10);
fill(0);
rect(266,320,10,10);
fill(0);
rect(276,320,10,10);
fill(0);
rect(286,320,10,10);
fill(0);
rect(296,320,10,10);
fill(0);
rect(306,320,10,10);
fill(#C0BFBF);
rect(316,320,10,10);
fill(0);
rect(326,320,10,10);

//fila 23
fill(0);
rect(216,330,10,10);
fill(#C0BFBF);
rect(226,330,10,10);
fill(#C0BFBF);
rect(236,330,10,10);
fill(#C0BFBF);
rect(246,330,10,10);
fill(#C0BFBF);
rect(256,330,10,10);
fill(#C0BFBF);
rect(266,330,10,10);
fill(#C0BFBF);
rect(276,330,10,10);
fill(#C0BFBF);
rect(286,330,10,10);
fill(#C0BFBF);
rect(296,330,10,10);
fill(#C0BFBF);
rect(306,330,10,10);
fill(#C0BFBF);
rect(316,330,10,10);
fill(#C0BFBF);
rect(326,330,10,10);
fill(0);
rect(336,330,10,10);

//fila 24
fill(0);
rect(216,340,10,10);
fill(#C0BFBF);
rect(226,340,10,10);
fill(#C0BFBF);
rect(236,340,10,10);
fill(#C0BFBF);
rect(246,340,10,10);
fill(#C0BFBF);
rect(256,340,10,10);
fill(#C0BFBF);
rect(266,340,10,10);
fill(#C0BFBF);
rect(276,340,10,10);
fill(#C0BFBF);
rect(286,340,10,10);
fill(#C0BFBF);
rect(296,340,10,10);
fill(#C0BFBF);
rect(306,340,10,10);
fill(#C0BFBF);
rect(316,340,10,10);
fill(#C0BFBF);
rect(326,340,10,10);
fill(0);
rect(336,340,10,10);

//fila 25
fill(0);
rect(216,350,10,10);
fill(#C0BFBF);
rect(226,350,10,10);
fill(#C0BFBF);
rect(236,350,10,10);
fill(#C0BFBF);
rect(246,350,10,10);
fill(#C0BFBF);
rect(256,350,10,10);
fill(#C0BFBF);
rect(266,350,10,10);
fill(0);
rect(276,350,10,10);
fill(#C0BFBF);
rect(286,350,10,10);
fill(#C0BFBF);
rect(296,350,10,10);
fill(#C0BFBF);
rect(306,350,10,10);
fill(#C0BFBF);
rect(316,350,10,10);
fill(#C0BFBF);
rect(326,350,10,10);
fill(0);
rect(336,350,10,10);

//fila 26
fill(0);
rect(206,360,10,10);
fill(#C0BFBF);
rect(216,360,10,10);
fill(#C0BFBF);
rect(226,360,10,10);
fill(#C0BFBF);
rect(236,360,10,10);
fill(#C0BFBF);
rect(246,360,10,10);
fill(#C0BFBF);
rect(256,360,10,10);
fill(0);
rect(266,360,10,10);
fill(0);
rect(286,360,10,10);
fill(#C0BFBF);
rect(296,360,10,10);
fill(#C0BFBF);
rect(306,360,10,10);
fill(#C0BFBF);
rect(316,360,10,10);
fill(#C0BFBF);
rect(326,360,10,10);
fill(#C0BFBF);
rect(336,360,10,10);
fill(0);
rect(346,360,10,10);

//fila 26
fill(0);
rect(206,370,10,10);
fill(#C0BFBF);
rect(216,370,10,10);
fill(#EFEFEE);
rect(226,370,10,10);
fill(#EFEFEE);
rect(236,370,10,10);
fill(#C0BFBF);
rect(246,370,10,10);
fill(0);
rect(256,370,10,10);
fill(0);
rect(296,370,10,10);
fill(#C0BFBF);
rect(306,370,10,10);
fill(#EFEFEE);
rect(316,370,10,10);
fill(#EFEFEE);
rect(326,370,10,10);
fill(#C0BFBF);
rect(336,370,10,10);
fill(0);
rect(346,370,10,10);

//fila 27
fill(0);
rect(206,380,10,10);
fill(#C0BFBF);
rect(216,380,10,10);
fill(#EFEFEE);
rect(226,380,10,10);
fill(#EFEFEE);
rect(236,380,10,10);
fill(#C0BFBF);
rect(246,380,10,10);
fill(0);
rect(256,380,10,10);
fill(0);
rect(296,380,10,10);
fill(#C0BFBF);
rect(306,380,10,10);
fill(#EFEFEE);
rect(316,380,10,10);
fill(#EFEFEE);
rect(326,380,10,10);
fill(#C0BFBF);
rect(336,380,10,10);
fill(0);
rect(346,380,10,10);

//fila 28
fill(0);
rect(206,390,10,10);
fill(#C0BFBF);
rect(216,390,10,10);
fill(#EFEFEE);
rect(226,390,10,10);
fill(#EFEFEE);
rect(236,390,10,10);
fill(#C0BFBF);
rect(246,390,10,10);
fill(0);
rect(256,390,10,10);
fill(0);
rect(296,390,10,10);
fill(#C0BFBF);
rect(306,390,10,10);
fill(#EFEFEE);
rect(316,390,10,10);
fill(#EFEFEE);
rect(326,390,10,10);
fill(#C0BFBF);
rect(336,390,10,10);
fill(0);
rect(346,390,10,10);

//fila 28
fill(0);
rect(206,400,10,10);
fill(#C0BFBF);
rect(216,400,10,10);
fill(#C0BFBF);
rect(226,400,10,10);
fill(#C0BFBF);
rect(236,400,10,10);
fill(#C0BFBF);
rect(246,400,10,10);
fill(0);
rect(256,400,10,10);
fill(0);
rect(296,400,10,10);
fill(#C0BFBF);
rect(306,400,10,10);
fill(#C0BFBF);
rect(316,400,10,10);
fill(#C0BFBF);
rect(326,400,10,10);
fill(#C0BFBF);
rect(336,400,10,10);
fill(0);
rect(346,400,10,10);

//fila 29
fill(0);
rect(206,410,10,10);
fill(0);
rect(216,410,10,10);
fill(0);
rect(226,410,10,10);
fill(0);
rect(236,410,10,10);
fill(0);
rect(246,410,10,10);
fill(0);
rect(256,410,10,10);
fill(0);
rect(296,410,10,10);
fill(0);
rect(306,410,10,10);
fill(0);
rect(316,410,10,10);
fill(0);
rect(326,410,10,10);
fill(0);
rect(336,410,10,10);
fill(0);
rect(346,410,10,10);

//fila 30
fill(0);
rect(206,420,10,10);
fill(#C0BFBF);
rect(216,420,10,10);
fill(#C0BFBF);
rect(226,420,10,10);
fill(#C0BFBF);
rect(236,420,10,10);
fill(#C0BFBF);
rect(246,420,10,10);
fill(0);
rect(256,420,10,10);
fill(0);
rect(296,420,10,10);
fill(#C0BFBF);
rect(306,420,10,10);
fill(#C0BFBF);
rect(316,420,10,10);
fill(#C0BFBF);
rect(326,420,10,10);
fill(#C0BFBF);
rect(336,420,10,10);
fill(0);
rect(346,420,10,10);

//fila 31
fill(0);
rect(206,430,10,10);
fill(#EFEFEE);
rect(216,430,10,10);
fill(#EFEFEE);
rect(226,430,10,10);
fill(#C0BFBF);
rect(236,430,10,10);
fill(#C0BFBF);
rect(246,430,10,10);
fill(0);
rect(256,430,10,10);
fill(0);
rect(296,430,10,10);
fill(#C0BFBF);
rect(306,430,10,10);
fill(#C0BFBF);
rect(316,430,10,10);
fill(#EFEFEE);
rect(326,430,10,10);
fill(#EFEFEE);
rect(336,430,10,10);
fill(0);
rect(346,430,10,10);

//fila 32
fill(0);
rect(206,440,10,10);
fill(#C0BFBF);
rect(216,440,10,10);
fill(#C0BFBF);
rect(226,440,10,10);
fill(#C0BFBF);
rect(236,440,10,10);
fill(#C0BFBF);
rect(246,440,10,10);
fill(0);
rect(256,440,10,10);
fill(0);
rect(296,440,10,10);
fill(#C0BFBF);
rect(306,440,10,10);
fill(#C0BFBF);
rect(316,440,10,10);
fill(#C0BFBF);
rect(326,440,10,10);
fill(#C0BFBF);
rect(336,440,10,10);
fill(0);
rect(346,440,10,10);

//fila 33
fill(0);
rect(196,450,10,10);
fill(#C0BFBF);
rect(206,450,10,10);
fill(#EFEFEE);
rect(216,450,10,10);
fill(#EFEFEE);
rect(226,450,10,10);
fill(#C0BFBF);
rect(236,450,10,10);
fill(#C0BFBF);
rect(246,450,10,10);
fill(0);
rect(256,450,10,10);
fill(0);
rect(296,450,10,10);
fill(#C0BFBF);
rect(306,450,10,10);
fill(#C0BFBF);
rect(316,450,10,10);
fill(#EFEFEE);
rect(326,450,10,10);
fill(#EFEFEE);
rect(336,450,10,10);
fill(#C0BFBF);
rect(346,450,10,10);
fill(0);
rect(356,450,10,10);

//fila 33
fill(0);
rect(186,460,10,10);
fill(#C0BFBF);
rect(196,460,10,10);
fill(#C0BFBF);
rect(206,460,10,10);
fill(#C0BFBF);
rect(216,460,10,10);
fill(#C0BFBF);
rect(226,460,10,10);
fill(#C0BFBF);
rect(236,460,10,10);
fill(#C0BFBF);
rect(246,460,10,10);
fill(0);
rect(256,460,10,10);
fill(0);
rect(296,460,10,10);
fill(#C0BFBF);
rect(306,460,10,10);
fill(#C0BFBF);
rect(316,460,10,10);
fill(#C0BFBF);
rect(326,460,10,10);
fill(#C0BFBF);
rect(336,460,10,10);
fill(#C0BFBF);
rect(346,460,10,10);
fill(#C0BFBF);
rect(356,460,10,10);
fill(0);
rect(366,460,10,10);

//fila 34
fill(0);
rect(176,470,10,10);
fill(#C0BFBF);
rect(186,470,10,10);
fill(#C0BFBF);
rect(196,470,10,10);
fill(#C0BFBF);
rect(206,470,10,10);
fill(#C0BFBF);
rect(216,470,10,10);
fill(#C0BFBF);
rect(226,470,10,10);
fill(#C0BFBF);
rect(236,470,10,10);
fill(#C0BFBF);
rect(246,470,10,10);
fill(0);
rect(256,470,10,10);
fill(0);
rect(296,470,10,10);
fill(#C0BFBF);
rect(306,470,10,10);
fill(#C0BFBF);
rect(316,470,10,10);
fill(#C0BFBF);
rect(326,470,10,10);
fill(#C0BFBF);
rect(336,470,10,10);
fill(#C0BFBF);
rect(346,470,10,10);
fill(#C0BFBF);
rect(356,470,10,10);
fill(#C0BFBF);
rect(366,470,10,10);
fill(0);
rect(376,470,10,10);

//fila 34
fill(0);
rect(176,480,10,10);
fill(0);
rect(186,480,10,10);
fill(0);
rect(196,480,10,10);
fill(0);
rect(206,480,10,10);
fill(0);
rect(216,480,10,10);
fill(0);
rect(226,480,10,10);
fill(0);
rect(236,480,10,10);
fill(0);
rect(246,480,10,10);
fill(0);
rect(256,480,10,10);
fill(0);
rect(296,480,10,10);
fill(0);
rect(306,480,10,10);
fill(0);
rect(316,480,10,10);
fill(0);
rect(326,480,10,10);
fill(0);
rect(336,480,10,10);
fill(0);
rect(346,480,10,10);
fill(0);
rect(356,480,10,10);
fill(0);
rect(366,480,10,10);
fill(0);
rect(376,480,10,10);
break;
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
case 1:
noStroke();
//fila 1
fill(0);
rect(246,70,10,10);
fill(0);
rect(256,70,10,10);
fill(0);
rect(266,70,10,10);
fill(0);
rect(276,70,10,10);
fill(0);
rect(286,70,10,10);
fill(0);
rect(296,70,10,10);
fill(0);
rect(306,70,10,10);

//fila 2
fill(0);
rect(136,80,10,10);
fill(0);
rect(146,80,10,10);
fill(0);
rect(236,80,10,10);
fill(#FFFF00);
rect(246,80,10,10);
fill(#181919);
rect(256,80,10,10);
fill(#181919);
rect(266,80,10,10);
fill(#FFFF00);
rect(276,80,10,10);
fill(#181919);
rect(286,80,10,10);
fill(#181919);
rect(296,80,10,10);
fill(#FFFF00);
rect(306,80,10,10);
fill(0);
rect(316,80,10,10);

//fila 3
fill(0);
rect(126,90,10,10);
fill(#DEB786);
rect(136,90,10,10);
fill(#DEB786);
rect(146,90,10,10);
fill(0);
rect(156,90,10,10);
fill(0);
rect(226,90,10,10);
fill(#181919);
rect(236,90,10,10);
fill(#181919);
rect(246,90,10,10);
fill(#FFFF00);
rect(256,90,10,10);
fill(#181919);
rect(266,90,10,10);
fill(#FF0000);
rect(276,90,10,10);
fill(#181919);
rect(286,90,10,10);
fill(#FFFF00);
rect(296,90,10,10);
fill(#181919);
rect(306,90,10,10);
fill(#181919);
rect(316,90,10,10);
fill(0);
rect(326,90,10,10);

//fila 4
fill(0);
rect(126,100,10,10);
fill(#DEB786);
rect(136,100,10,10);
fill(#DEB786);
rect(146,100,10,10);
fill(0);
rect(156,100,10,10);
fill(0);
rect(216,100,10,10);
fill(#181919);
rect(226,100,10,10);
fill(#FFFF00);
rect(236,100,10,10);
fill(#181919);
rect(246,100,10,10);
fill(#181919);
rect(256,100,10,10);
fill(#FF0000);
rect(266,100,10,10);
fill(#FF0000);
rect(276,100,10,10);
fill(#FF0000);
rect(286,100,10,10);
fill(#181919);
rect(296,100,10,10);
fill(#181919);
rect(306,100,10,10);
fill(#FFFF00);
rect(316,100,10,10);
fill(#181919);
rect(326,100,10,10);
fill(0);
rect(336,100,10,10);

//fila 5
fill(0);
rect(126,110,10,10);
fill(#DEB786);
rect(136,110,10,10);
fill(#DEB786);
rect(146,110,10,10);
fill(0);
rect(156,110,10,10);
fill(0);
rect(166,110,10,10);
fill(0);
rect(216,110,10,10);
fill(#181919);
rect(226,110,10,10);
fill(#181919);
rect(236,110,10,10);
fill(#FFFF00);
rect(246,110,10,10);
fill(#181919);
rect(256,110,10,10);
fill(#181919);
rect(266,110,10,10);
fill(#FF0000);
rect(276,110,10,10);
fill(#181919);
rect(286,110,10,10);
fill(#181919);
rect(296,110,10,10);
fill(#FFFF00);
rect(306,110,10,10);
fill(#181919);
rect(316,110,10,10);
fill(#181919);
rect(326,110,10,10);
fill(0);
rect(336,110,10,10);

//fila 6
fill(0);
rect(126,120,10,10);
fill(#DEB786);
rect(136,120,10,10);
fill(#DEB786);
rect(146,120,10,10);
fill(0);
rect(156,120,10,10);
fill(#DEB786);
rect(166,120,10,10);
fill(0);
rect(176,120,10,10);
fill(0);
rect(216,120,10,10);
fill(#181919);
rect(226,120,10,10);
fill(#FFFF00);
rect(236,120,10,10);
fill(#181919);
rect(246,120,10,10);
fill(#181919);
rect(256,120,10,10);
fill(#181919);
rect(266,120,10,10);
fill(#FF0000);
rect(276,120,10,10);
fill(#181919);
rect(286,120,10,10);
fill(#181919);
rect(296,120,10,10);
fill(#181919);
rect(306,120,10,10);
fill(#FFFF00);
rect(316,120,10,10);
fill(#181919);
rect(326,120,10,10);
fill(0);
rect(336,120,10,10);

//fila 7
fill(0);
rect(126,130,10,10);
fill(#DEB786);
rect(136,130,10,10);
fill(#DEB786);
rect(146,130,10,10);
fill(#DEB786);
rect(156,130,10,10);
fill(0);
rect(166,130,10,10);
fill(0);
rect(216,130,10,10);
fill(#181919);
rect(226,130,10,10);
fill(#FFFF00);
rect(236,130,10,10);
fill(#FFFF00);
rect(246,130,10,10);
fill(#FFFF00);
rect(256,130,10,10);
fill(#FFFF00);
rect(266,130,10,10);
fill(#FFFF00);
rect(276,130,10,10);
fill(#FFFF00);
rect(286,130,10,10);
fill(#FFFF00);
rect(296,130,10,10);
fill(#FFFF00);
rect(306,130,10,10);
fill(#FFFF00);
rect(316,130,10,10);
fill(#181919);
rect(326,130,10,10);
fill(0);
rect(336,130,10,10);

//fila 8
fill(0);
rect(136,140,10,10);
fill(#DEB786);
rect(146,140,10,10);
fill(0);
rect(156,140,10,10);
fill(0);
rect(216,140,10,10);
fill(#181919);
rect(226,140,10,10);
fill(#FFFF00);
rect(236,140,10,10);
fill(255);
rect(246,140,10,10);
fill(0);
rect(256,140,10,10);
fill(#FFFF00);
rect(266,140,10,10);
fill(#FFFF00);
rect(276,140,10,10);
fill(#FFFF00);
rect(286,140,10,10);
fill(0);
rect(296,140,10,10);
fill(255);
rect(306,140,10,10);
fill(#FFFF00);
rect(316,140,10,10);
fill(#181919);
rect(326,140,10,10);
fill(0);
rect(336,140,10,10);

//fila 9
fill(0);
rect(126,150,10,10);
fill(#DEB786);
rect(136,150,10,10);
fill(#DEB786);
rect(146,150,10,10);
fill(0);
rect(156,150,10,10);
fill(0);
rect(216,150,10,10);
fill(#181919);
rect(226,150,10,10);
fill(#FFFF00);
rect(236,150,10,10);
fill(#FFFF00);
rect(246,150,10,10);
fill(#FFFF00);
rect(256,150,10,10);
fill(#FFFF00);
rect(266,150,10,10);
fill(#DEB786);
rect(276,150,10,10);
fill(#FFFF00);
rect(286,150,10,10);
fill(#FFFF00);
rect(296,150,10,10);
fill(#FFFF00);
rect(306,150,10,10);
fill(#FFFF00);
rect(316,150,10,10);
fill(#181919);
rect(326,150,10,10);
fill(0);
rect(336,150,10,10);

//fila 10
fill(0);
rect(126,160,10,10);
fill(#DEB786);
rect(136,160,10,10);
fill(#DEB786);
rect(146,160,10,10);
fill(0);
rect(156,160,10,10);
fill(0);
rect(216,160,10,10);
fill(#FFFF00);
rect(226,160,10,10);
fill(#181919);
rect(236,160,10,10);
fill(#181919);
rect(246,160,10,10);
fill(#181919);
rect(256,160,10,10);
fill(#DEB786);
rect(266,160,10,10);
fill(#DEB786);
rect(276,160,10,10);
fill(#DEB786);
rect(286,160,10,10);
fill(#181919);
rect(296,160,10,10);
fill(#181919);
rect(306,160,10,10);
fill(#181919);
rect(316,160,10,10);
fill(#FFFF00);
rect(326,160,10,10);
fill(0);
rect(336,160,10,10);

//fila 11
fill(0);
rect(126,170,10,10);
fill(#DEB786);
rect(136,170,10,10);
fill(#DEB786);
rect(146,170,10,10);
fill(#DEB786);
rect(156,170,10,10);
fill(0);
rect(166,170,10,10);
fill(0);
rect(226,170,10,10);
fill(#FFFF00);
rect(236,170,10,10);
fill(#FFFF00);
rect(246,170,10,10);
fill(#181919);
rect(256,170,10,10);
fill(#181919);
rect(266,170,10,10);
fill(#181919);
rect(276,170,10,10);
fill(#181919);
rect(286,170,10,10);
fill(#181919);
rect(296,170,10,10);
fill(#FFFF00);
rect(306,170,10,10);
fill(#FFFF00);
rect(316,170,10,10);
fill(0);
rect(326,170,10,10);

//fila 11
fill(0);
rect(126,180,10,10);
fill(#DEB786);
rect(136,180,10,10);
fill(#DEB786);
rect(146,180,10,10);
fill(#DEB786);
rect(156,180,10,10);
fill(0);
rect(166,180,10,10);
fill(0);
rect(226,180,10,10);
fill(#FFFF00);
rect(236,180,10,10);
fill(#FF0000);
rect(246,180,10,10);
fill(#FFFF00);
rect(256,180,10,10);
fill(#DEB786);
rect(266,180,10,10);
fill(#DEB786);
rect(276,180,10,10);
fill(#DEB786);
rect(286,180,10,10);
fill(#FFFF00);
rect(296,180,10,10);
fill(#FF0000);
rect(306,180,10,10);
fill(#FFFF00);
rect(316,180,10,10);
fill(0);
rect(326,180,10,10);

//fila 12
fill(0);
rect(126,190,10,10);
fill(#DEB786);
rect(136,190,10,10);
fill(#DEB786);
rect(146,190,10,10);
fill(#DEB786);
rect(156,190,10,10);
fill(0);
rect(166,190,10,10);
fill(0);
rect(176,190,10,10);
fill(0);
rect(186,190,10,10);
fill(0);
rect(196,190,10,10);
fill(0);
rect(206,190,10,10);
fill(0);
rect(236,190,10,10);
fill(#FFFF00);
rect(246,190,10,10);
fill(#FFFF00);
rect(256,190,10,10);
fill(#DEB786);
rect(266,190,10,10);
fill(#DEB786);
rect(276,190,10,10);
fill(#DEB786);
rect(286,190,10,10);
fill(#FFFF00);
rect(296,190,10,10);
fill(#FFFF00);
rect(306,190,10,10);
fill(0);
rect(316,190,10,10);
fill(0);
rect(346,190,10,10);
fill(0);
rect(356,190,10,10);
fill(0);
rect(366,190,10,10);

//fila 13
fill(0);
rect(126,200,10,10);
fill(#DEB786);
rect(136,200,10,10);
fill(#DEB786);
rect(146,200,10,10);
fill(#DEB786);
rect(156,200,10,10);
fill(0);
rect(166,200,10,10);
fill(0);
rect(176,200,10,10);
fill(#DEB786);
rect(186,200,10,10);
fill(0);
rect(196,200,10,10);
fill(#DEB786);
rect(206,200,10,10);
fill(0);
rect(216,200,10,10);
fill(0);
rect(226,200,10,10);
fill(#DEB786);
rect(236,200,10,10);
fill(0);
rect(246,200,10,10);
fill(#FFFF00);
rect(256,200,10,10);
fill(#DEB786);
rect(266,200,10,10);
fill(#DEB786);
rect(276,200,10,10);
fill(#DEB786);
rect(286,200,10,10);
fill(#FFFF00);
rect(296,200,10,10);
fill(0);
rect(306,200,10,10);
fill(#DEB786);
rect(316,200,10,10);
fill(0);
rect(326,200,10,10);
fill(0);
rect(336,200,10,10);
fill(#DEB786);
rect(346,200,10,10);
fill(#DEB786);
rect(356,200,10,10);
fill(#DEB786);
rect(366,200,10,10);
fill(0);
rect(376,200,10,10);

//fila 14
fill(0);
rect(126,210,10,10);
fill(#DEB786);
rect(136,210,10,10);
fill(#DEB786);
rect(146,210,10,10);
fill(#DEB786);
rect(156,210,10,10);
fill(#DEB786);
rect(166,210,10,10);
fill(#DEB786);
rect(176,210,10,10);
fill(0);
rect(186,210,10,10);
fill(#DEB786);
rect(196,210,10,10);
fill(#DEB786);
rect(206,210,10,10);
fill(0);
rect(216,210,10,10);
fill(0);
rect(226,210,10,10);
fill(0);
rect(236,210,10,10);
fill(#DEB786);
rect(246,210,10,10);
fill(0);
rect(256,210,10,10);
fill(0);
rect(266,210,10,10);
fill(0);
rect(276,210,10,10);
fill(0);
rect(286,210,10,10);
fill(0);
rect(296,210,10,10);
fill(#DEB786);
rect(306,210,10,10);
fill(0);
rect(316,210,10,10);
fill(0);
rect(326,210,10,10);
fill(0);
rect(336,210,10,10);
fill(#DEB786);
rect(346,210,10,10);
fill(#DEB786);
rect(356,210,10,10);
fill(#DEB786);
rect(366,210,10,10);
fill(#DEB786);
rect(376,210,10,10);
fill(0);
rect(386,210,10,10);

//fila 14
fill(0);
rect(136,220,10,10);
fill(0);
rect(146,220,10,10);
fill(#DEB786);
rect(156,220,10,10);
fill(#DEB786);
rect(166,220,10,10);
fill(#DEB786);
rect(176,220,10,10);
fill(#DEB786);
rect(186,220,10,10);
fill(#DEB786);
rect(196,220,10,10);
fill(#DEB786);
rect(206,220,10,10);
fill(0);
rect(216,220,10,10);
fill(0);
rect(226,220,10,10);
fill(0);
rect(236,220,10,10);
fill(0);
rect(246,220,10,10);
fill(#DEB786);
rect(256,220,10,10);
fill(#DEB786);
rect(266,220,10,10);
fill(#DEB786);
rect(276,220,10,10);
fill(#DEB786);
rect(286,220,10,10);
fill(#DEB786);
rect(296,220,10,10);
fill(0);
rect(306,220,10,10);
fill(0);
rect(316,220,10,10);
fill(0);
rect(326,220,10,10);
fill(0);
rect(336,220,10,10);
fill(#DEB786);
rect(346,220,10,10);
fill(#DEB786);
rect(356,220,10,10);
fill(#DEB786);
rect(366,220,10,10);
fill(#DEB786);
rect(376,220,10,10);
fill(#DEB786);
rect(386,220,10,10);
fill(0);
rect(396,220,10,10);

//fila 14
fill(0);
rect(156,230,10,10);
fill(0);
rect(166,230,10,10);
fill(0);
rect(176,230,10,10);
fill(0);
rect(186,230,10,10);
fill(0);
rect(196,230,10,10);
fill(#DEB786);
rect(206,230,10,10);
fill(#DEB786);
rect(216,230,10,10);
fill(0);
rect(226,230,10,10);
fill(0);
rect(236,230,10,10);
fill(0);
rect(246,230,10,10);
fill(0);
rect(256,230,10,10);
fill(#DEB786);
rect(266,230,10,10);
fill(0);
rect(276,230,10,10);
fill(#DEB786);
rect(286,230,10,10);
fill(0);
rect(296,230,10,10);
fill(0);
rect(306,230,10,10);
fill(0);
rect(316,230,10,10);
fill(0);
rect(326,230,10,10);
fill(#DEB786);
rect(336,230,10,10);
fill(#DEB786);
rect(346,230,10,10);
fill(0);
rect(356,230,10,10);
fill(#DEB786);
rect(366,230,10,10);
fill(#DEB786);
rect(376,230,10,10);
fill(0);
rect(386,230,10,10);
fill(0);
rect(396,230,10,10);

//fila 15
fill(0);
rect(206,240,10,10);
fill(#DEB786);
rect(216,240,10,10);
fill(#DEB786);
rect(226,240,10,10);
fill(#DEB786);
rect(236,240,10,10);
fill(0);
rect(246,240,10,10);
fill(0);
rect(256,240,10,10);
fill(#DEB786);
rect(266,240,10,10);
fill(0);
rect(276,240,10,10);
fill(#DEB786);
rect(286,240,10,10);
fill(0);
rect(296,240,10,10);
fill(0);
rect(306,240,10,10);
fill(#DEB786);
rect(316,240,10,10);
fill(#DEB786);
rect(326,240,10,10);
fill(#DEB786);
rect(336,240,10,10);
fill(0);
rect(346,240,10,10);
fill(#DEB786);
rect(356,240,10,10);
fill(#DEB786);
rect(366,240,10,10);
fill(0);
rect(376,240,10,10);
fill(#DEB786);
rect(386,240,10,10);
fill(0);
rect(396,240,10,10);

//fila 15
fill(0);
rect(206,250,10,10);
fill(#DEB786);
rect(216,250,10,10);
fill(#846951);
rect(226,250,10,10);
fill(#DEB786);
rect(236,250,10,10);
fill(#DEB786);
rect(246,250,10,10);
fill(0);
rect(256,250,10,10);
fill(#DEB786);
rect(266,250,10,10);
fill(0);
rect(276,250,10,10);
fill(#DEB786);
rect(286,250,10,10);
fill(0);
rect(296,250,10,10);
fill(#DEB786);
rect(306,250,10,10);
fill(#DEB786);
rect(316,250,10,10);
fill(#846951);
rect(326,250,10,10);
fill(#DEB786);
rect(336,250,10,10);
fill(0);
rect(346,250,10,10);
fill(#DEB786);
rect(356,250,10,10);
fill(#DEB786);
rect(366,250,10,10);
fill(#DEB786);
rect(376,250,10,10);
fill(0);
rect(386,250,10,10);
fill(0);
rect(396,250,10,10);

//fila 16
fill(0);
rect(216,260,10,10);
fill(#DEB786);
rect(226,260,10,10);
fill(#DEB786);
rect(236,260,10,10);
fill(#DEB786);
rect(246,260,10,10);
fill(#DEB786);
rect(256,260,10,10);
fill(#DEB786);
rect(266,260,10,10);
fill(0);
rect(276,260,10,10);
fill(#DEB786);
rect(286,260,10,10);
fill(#DEB786);
rect(296,260,10,10);
fill(#DEB786);
rect(306,260,10,10);
fill(#DEB786);
rect(316,260,10,10);
fill(#DEB786);
rect(326,260,10,10);
fill(0);
rect(336,260,10,10);
fill(0);
rect(356,260,10,10);
fill(#DEB786);
rect(366,260,10,10);
fill(#DEB786);
rect(376,260,10,10);
fill(#DEB786);
rect(386,260,10,10);
fill(0);
rect(396,260,10,10);

//fila 17
fill(0);
rect(226,270,10,10);
fill(0);
rect(236,270,10,10);
fill(0);
rect(246,270,10,10);
fill(0);
rect(256,270,10,10);
fill(0);
rect(266,270,10,10);
fill(#DEB786);
rect(276,270,10,10);
fill(0);
rect(286,270,10,10);
fill(0);
rect(296,270,10,10);
fill(0);
rect(306,270,10,10);
fill(0);
rect(316,270,10,10);
fill(0);
rect(326,270,10,10);
fill(0);
rect(366,270,10,10);
fill(#DEB786);
rect(376,270,10,10);
fill(0);
rect(386,270,10,10);

//fila 18
fill(0);
rect(226,280,10,10);
fill(#DEB786);
rect(236,280,10,10);
fill(#DEB786);
rect(246,280,10,10);
fill(#DEB786);
rect(256,280,10,10);
fill(#DEB786);
rect(266,280,10,10);
fill(#DEB786);
rect(276,280,10,10);
fill(#DEB786);
rect(286,280,10,10);
fill(#DEB786);
rect(296,280,10,10);
fill(#DEB786);
rect(306,280,10,10);
fill(#DEB786);
rect(316,280,10,10);
fill(0);
rect(326,280,10,10);
fill(0);
rect(366,280,10,10);
fill(#DEB786);
rect(376,280,10,10);
fill(0);
rect(386,280,10,10);

//fila 19
fill(0);
rect(226,290,10,10);
fill(#DEB786);
rect(236,290,10,10);
fill(#DEB786);
rect(246,290,10,10);
fill(0);
rect(256,290,10,10);
fill(0);
rect(266,290,10,10);
fill(0);
rect(276,290,10,10);
fill(0);
rect(286,290,10,10);
fill(0);
rect(296,290,10,10);
fill(#DEB786);
rect(306,290,10,10);
fill(#DEB786);
rect(316,290,10,10);
fill(0);
rect(326,290,10,10);
fill(0);
rect(356,290,10,10);
fill(#DEB786);
rect(366,290,10,10);
fill(#DEB786);
rect(376,290,10,10);
fill(#DEB786);
rect(386,290,10,10);
fill(0);
rect(396,290,10,10);

//fila 20
fill(0);
rect(226,300,10,10);
fill(#DEB786);
rect(236,300,10,10);
fill(0);
rect(246,300,10,10);
fill(#DEB786);
rect(256,300,10,10);
fill(#DEB786);
rect(266,300,10,10);
fill(#DEB786);
rect(276,300,10,10);
fill(#DEB786);
rect(286,300,10,10);
fill(#DEB786);
rect(296,300,10,10);
fill(0);
rect(306,300,10,10);
fill(#DEB786);
rect(316,300,10,10);
fill(0);
rect(326,300,10,10);
fill(0);
rect(356,300,10,10);
fill(#DEB786);
rect(366,300,10,10);
fill(#DEB786);
rect(376,300,10,10);
fill(#DEB786);
rect(386,300,10,10);
fill(0);
rect(396,300,10,10);

//fila 21
fill(0);
rect(226,310,10,10);
fill(#DEB786);
rect(236,310,10,10);
fill(#DEB786);
rect(246,310,10,10);
fill(#DEB786);
rect(256,310,10,10);
fill(#DEB786);
rect(266,310,10,10);
fill(#846951);
rect(276,310,10,10);
fill(#DEB786);
rect(286,310,10,10);
fill(#DEB786);
rect(296,310,10,10);
fill(#DEB786);
rect(306,310,10,10);
fill(#DEB786);
rect(316,310,10,10);
fill(0);
rect(326,310,10,10);
fill(0);
rect(356,310,10,10);
fill(#DEB786);
rect(366,310,10,10);
fill(#DEB786);
rect(376,310,10,10);
fill(#DEB786);
rect(386,310,10,10);
fill(0);
rect(396,310,10,10);

//fila 22
fill(0);
rect(226,320,10,10);
fill(0);
rect(236,320,10,10);
fill(#DEB786);
rect(246,320,10,10);
fill(#DEB786);
rect(256,320,10,10);
fill(#DEB786);
rect(266,320,10,10);
fill(#DEB786);
rect(276,320,10,10);
fill(#DEB786);
rect(286,320,10,10);
fill(#DEB786);
rect(296,320,10,10);
fill(#DEB786);
rect(306,320,10,10);
fill(0);
rect(316,320,10,10);
fill(0);
rect(326,320,10,10);
fill(0);
rect(366,320,10,10);
fill(#DEB786);
rect(376,320,10,10);
fill(#DEB786);
rect(386,320,10,10);
fill(0);
rect(396,320,10,10);

//fila 23
fill(0);
rect(226,330,10,10);
fill(#181919);
rect(236,330,10,10);
fill(0);
rect(246,330,10,10);
fill(0);
rect(256,330,10,10);
fill(0);
rect(266,330,10,10);
fill(0);
rect(276,330,10,10);
fill(0);
rect(286,330,10,10);
fill(0);
rect(296,330,10,10);
fill(0);
rect(306,330,10,10);
fill(#181919);
rect(316,330,10,10);
fill(0);
rect(326,330,10,10);
fill(0);
rect(366,330,10,10);
fill(#DEB786);
rect(376,330,10,10);
fill(0);
rect(386,330,10,10);

//fila 24
fill(0);
rect(216,340,10,10);
fill(#181919);
rect(226,340,10,10);
fill(#181919);
rect(236,340,10,10);
fill(#181919);
rect(246,340,10,10);
fill(#181919);
rect(256,340,10,10);
fill(#181919);
rect(266,340,10,10);
fill(#181919);
rect(276,340,10,10);
fill(#181919);
rect(286,340,10,10);
fill(#181919);
rect(296,340,10,10);
fill(#181919);
rect(306,340,10,10);
fill(#181919);
rect(316,340,10,10);
fill(#181919);
rect(326,340,10,10);
fill(0);
rect(336,340,10,10);
fill(0);
rect(356,340,10,10);
fill(#DEB786);
rect(366,340,10,10);
fill(#DEB786);
rect(376,340,10,10);
fill(#DEB786);
rect(386,340,10,10);
fill(0);
rect(396,340,10,10);


//fila 23
fill(0);
rect(216,350,10,10);
fill(#181919);
rect(226,350,10,10);
fill(#181919);
rect(236,350,10,10);
fill(#181919);
rect(246,350,10,10);
fill(#181919);
rect(256,350,10,10);
fill(#181919);
rect(266,350,10,10);
fill(#181919);
rect(276,350,10,10);
fill(#181919);
rect(286,350,10,10);
fill(#181919);
rect(296,350,10,10);
fill(#181919);
rect(306,350,10,10);
fill(#181919);
rect(316,350,10,10);
fill(#FFFF00);
rect(326,350,10,10);
fill(0);
rect(336,350,10,10);
fill(0);
rect(356,350,10,10);
fill(#DEB786);
rect(366,350,10,10);
fill(0);
rect(376,350,10,10);
fill(#DEB786);
rect(386,350,10,10);
fill(0);
rect(396,350,10,10);

//fila 24
fill(0);
rect(216,360,10,10);
fill(#181919);
rect(226,360,10,10);
fill(#181919);
rect(236,360,10,10);
fill(#181919);
rect(246,360,10,10);
fill(#181919);
rect(256,360,10,10);
fill(#181919);
rect(266,360,10,10);
fill(0);
rect(276,360,10,10);
fill(#181919);
rect(286,360,10,10);
fill(#181919);
rect(296,360,10,10);
fill(#181919);
rect(306,360,10,10);
fill(#FFFF00);
rect(316,360,10,10);
fill(#181919);
rect(326,360,10,10);
fill(0);
rect(336,360,10,10);
fill(0);
rect(366,360,10,10);
fill(#DEB786);
rect(376,360,10,10);
fill(#DEB786);
rect(386,360,10,10);
fill(0);
rect(396,360,10,10);

//fila 25
fill(0);
rect(206,370,10,10);
fill(#181919);
rect(216,370,10,10);
fill(#181919);
rect(226,370,10,10);
fill(#181919);
rect(236,370,10,10);
fill(#181919);
rect(246,370,10,10);
fill(#181919);
rect(256,370,10,10);
fill(0);
rect(266,370,10,10);
fill(0);
rect(286,370,10,10);
fill(#181919);
rect(296,370,10,10);
fill(#181919);
rect(306,370,10,10);
fill(#181919);
rect(316,370,10,10);
fill(#FFFF00);
rect(326,370,10,10);
fill(#181919);
rect(336,370,10,10);
fill(0);
rect(346,370,10,10);
fill(0);
rect(376,370,10,10);
fill(0);
rect(386,370,10,10);

//fila 26
fill(0);
rect(206,380,10,10);
fill(#FFFF00);
rect(216,380,10,10);
fill(#181919);
rect(226,380,10,10);
fill(#181919);
rect(236,380,10,10);
fill(#181919);
rect(246,380,10,10);
fill(0);
rect(256,380,10,10);
fill(0);
rect(296,380,10,10);
fill(#181919);
rect(306,380,10,10);
fill(#181919);
rect(316,380,10,10);
fill(#181919);
rect(326,380,10,10);
fill(#181919);
rect(336,380,10,10);
fill(0);
rect(346,380,10,10);

//fila 26
fill(0);
rect(206,390,10,10);
fill(#FF0000);
rect(216,390,10,10);
fill(#FFFF00);
rect(226,390,10,10);
fill(#181919);
rect(236,390,10,10);
fill(#181919);
rect(246,390,10,10);
fill(0);
rect(256,390,10,10);
fill(0);
rect(296,390,10,10);
fill(#181919);
rect(306,390,10,10);
fill(#181919);
rect(316,390,10,10);
fill(#181919);
rect(326,390,10,10);
fill(#FFFF00);
rect(336,390,10,10);
fill(0);
rect(346,390,10,10);

//fila 27
fill(0);
rect(206,400,10,10);
fill(#FF0000);
rect(216,400,10,10);
fill(#FFFF00);
rect(226,400,10,10);
fill(#181919);
rect(236,400,10,10);
fill(#181919);
rect(246,400,10,10);
fill(0);
rect(256,400,10,10);
fill(0);
rect(296,400,10,10);
fill(#181919);
rect(306,400,10,10);
fill(#181919);
rect(316,400,10,10);
fill(#181919);
rect(326,400,10,10);
fill(#FFFF00);
rect(336,400,10,10);
fill(0);
rect(346,400,10,10);

//fila 28
fill(0);
rect(206,410,10,10);
fill(#FF0000);
rect(216,410,10,10);
fill(#FFFF00);
rect(226,410,10,10);
fill(#181919);
rect(236,410,10,10);
fill(#181919);
rect(246,410,10,10);
fill(0);
rect(256,410,10,10);
fill(0);
rect(296,410,10,10);
fill(#181919);
rect(306,410,10,10);
fill(#181919);
rect(316,410,10,10);
fill(#181919);
rect(326,410,10,10);
fill(#FFFF00);
rect(336,410,10,10);
fill(0);
rect(346,410,10,10);

//fila 29
fill(0);
rect(206,420,10,10);
fill(#FF0000);
rect(216,420,10,10);
fill(#FFFF00);
rect(226,420,10,10);
fill(#181919);
rect(236,420,10,10);
fill(#181919);
rect(246,420,10,10);
fill(0);
rect(256,420,10,10);
fill(0);
rect(296,420,10,10);
fill(#181919);
rect(306,420,10,10);
fill(#181919);
rect(316,420,10,10);
fill(#181919);
rect(326,420,10,10);
fill(#181919);
rect(336,420,10,10);
fill(0);
rect(346,420,10,10);

//fila 30
fill(0);
rect(206,430,10,10);
fill(#FFFF00);
rect(216,430,10,10);
fill(#181919);
rect(226,430,10,10);
fill(#181919);
rect(236,430,10,10);
fill(#181919);
rect(246,430,10,10);
fill(0);
rect(256,430,10,10);
fill(0);
rect(296,430,10,10);
fill(#181919);
rect(306,430,10,10);
fill(#181919);
rect(316,430,10,10);
fill(#181919);
rect(326,430,10,10);
fill(#FFFF00);
rect(336,430,10,10);
fill(0);
rect(346,430,10,10);

//fila 31
fill(0);
rect(206,440,10,10);
fill(#181919);
rect(216,440,10,10);
fill(#181919);
rect(226,440,10,10);
fill(#181919);
rect(236,440,10,10);
fill(#181919);
rect(246,440,10,10);
fill(0);
rect(256,440,10,10);
fill(0);
rect(296,440,10,10);
fill(#181919);
rect(306,440,10,10);
fill(#181919);
rect(316,440,10,10);
fill(#FFFF00);
rect(326,440,10,10);
fill(#181919);
rect(336,440,10,10);
fill(0);
rect(346,440,10,10);

//fila 32
fill(0);
rect(206,450,10,10);
fill(#181919);
rect(216,450,10,10);
fill(#181919);
rect(226,450,10,10);
fill(#181919);
rect(236,450,10,10);
fill(#181919);
rect(246,450,10,10);
fill(0);
rect(256,450,10,10);
fill(0);
rect(296,450,10,10);
fill(#181919);
rect(306,450,10,10);
fill(#181919);
rect(316,450,10,10);
fill(#181919);
rect(326,450,10,10);
fill(#FFFF00);
rect(336,450,10,10);
fill(0);
rect(346,450,10,10);

//fila 33
fill(0);
rect(196,460,10,10);
fill(0);
rect(206,460,10,10);
fill(0);
rect(216,460,10,10);
fill(0);
rect(226,460,10,10);
fill(0);
rect(236,460,10,10);
fill(0);
rect(246,460,10,10);
fill(0);
rect(256,460,10,10);
fill(0);
rect(296,460,10,10);
fill(0);
rect(306,460,10,10);
fill(0);
rect(316,460,10,10);
fill(0);
rect(326,460,10,10);
fill(0);
rect(336,460,10,10);
fill(0);
rect(346,460,10,10);
fill(0);
rect(356,460,10,10);

//fila 34
fill(0);
rect(186,470,10,10);
fill(0);
rect(196,470,10,10);
fill(0);
rect(206,470,10,10);
fill(0);
rect(216,470,10,10);
fill(0);
rect(226,470,10,10);
fill(0);
rect(236,470,10,10);
fill(0);
rect(246,470,10,10);
fill(0);
rect(256,470,10,10);
fill(0);
rect(296,470,10,10);
fill(0);
rect(306,470,10,10);
fill(0);
rect(316,470,10,10);
fill(0);
rect(326,470,10,10);
fill(0);
rect(336,470,10,10);
fill(0);
rect(346,470,10,10);
fill(0);
rect(356,470,10,10);
fill(0);
rect(366,470,10,10);

//fila 35
fill(0);
rect(176,480,10,10);
fill(0);
rect(186,480,10,10);
fill(0);
rect(196,480,10,10);
fill(0);
rect(206,480,10,10);
fill(0);
rect(216,480,10,10);
fill(0);
rect(226,480,10,10);
fill(0);
rect(236,480,10,10);
fill(0);
rect(246,480,10,10);
fill(0);
rect(256,480,10,10);
fill(0);
rect(296,480,10,10);
fill(0);
rect(306,480,10,10);
fill(0);
rect(316,480,10,10);
fill(0);
rect(326,480,10,10);
fill(0);
rect(336,480,10,10);
fill(0);
rect(346,480,10,10);
fill(0);
rect(356,480,10,10);
fill(0);
rect(366,480,10,10);
fill(0);
rect(376,480,10,10);

//fila 36
fill(0);
rect(176,490,10,10);
fill(0);
rect(186,490,10,10);
fill(0);
rect(196,490,10,10);
fill(0);
rect(206,490,10,10);
fill(0);
rect(216,490,10,10);
fill(0);
rect(226,490,10,10);
fill(0);
rect(236,490,10,10);
fill(0);
rect(246,490,10,10);
fill(0);
rect(256,490,10,10);
fill(0);
rect(296,490,10,10);
fill(0);
rect(306,490,10,10);
fill(0);
rect(316,490,10,10);
fill(0);
rect(326,490,10,10);
fill(0);
rect(336,490,10,10);
fill(0);
rect(346,490,10,10);
fill(0);
rect(356,490,10,10);
fill(0);
rect(366,490,10,10);
fill(0);
rect(376,490,10,10);
break;

case 2:
noStroke(); 
//fila 1
fill(0);
rect(246,70,10,10);
rect(256,70,10,10);
rect(266,70,10,10);
rect(276,70,10,10);
rect(286,70,10,10);
rect(296,70,10,10);
rect(306,70,10,10);

//fila 2
fill(0);
rect(236,80,10,10);
rect(246,80,10,10);
rect(256,80,10,10);
rect(266,80,10,10);
rect(276,80,10,10);
rect(286,80,10,10);
rect(296,80,10,10);
rect(306,80,10,10);
rect(316,80,10,10);

//fila 3
fill(0);
rect(226,90,10,10);
rect(236,90,10,10);
rect(246,90,10,10);
rect(256,90,10,10);
rect(266,90,10,10);
rect(276,90,10,10);
rect(286,90,10,10);
rect(296,90,10,10);
rect(306,90,10,10);
rect(316,90,10,10);
rect(326,90,10,10);

//fila 4
fill(0);
rect(216,100,10,10);
fill(#FF0000);
rect(226,100,10,10);
rect(236,100,10,10);
rect(246,100,10,10);
rect(256,100,10,10);
fill(#272727);
rect(266,100,10,10);
fill(255);
rect(276,100,10,10);
fill(#272727);
rect(286,100,10,10);
fill(#FF0000);
rect(296,100,10,10);
rect(306,100,10,10);
rect(316,100,10,10);
rect(326,100,10,10);
fill(0);
rect(336,100,10,10);
fill(#FF0000);
rect(346,100,10,10);

//fila 5
fill(0);
rect(216,110,10,10);
fill(255);
rect(226,110,10,10);
rect(236,110,10,10);
rect(246,110,10,10);
rect(256,110,10,10);
rect(266,110,10,10);
rect(276,110,10,10);
rect(286,110,10,10);
rect(296,110,10,10);
rect(306,110,10,10);
rect(316,110,10,10);
rect(326,110,10,10);
fill(0);
rect(336,110,10,10);
fill(#FF0000);
rect(346,110,10,10);
rect(356,110,10,10);

//fila 6
fill(0);
rect(216,120,10,10);
fill(255);
rect(226,120,10,10);
rect(236,120,10,10);
rect(246,120,10,10);
rect(256,120,10,10);
rect(266,120,10,10);
rect(276,120,10,10);
rect(286,120,10,10);
rect(296,120,10,10);
rect(306,120,10,10);
rect(316,120,10,10);
rect(326,120,10,10);
fill(0);
rect(336,120,10,10);
fill(#FF0000);
rect(356,120,10,10);
rect(366,120,10,10);

//fila 7
fill(0);
rect(216,130,10,10);
fill(255);
rect(226,130,10,10);
fill(#272727);
rect(236,130,10,10);
rect(246,130,10,10);
rect(256,130,10,10);
rect(266,130,10,10);
fill(255);
rect(276,130,10,10);
fill(#272727);
rect(286,130,10,10);
rect(296,130,10,10);
rect(306,130,10,10);
rect(316,130,10,10);
fill(255);
rect(326,130,10,10);
fill(0);
rect(336,130,10,10);
fill(#FF0000);
rect(356,130,10,10);
rect(376,130,10,10);

//fila 8
fill(0);
rect(216,140,10,10);
fill(255);
rect(226,140,10,10);
fill(#272727);
rect(236,140,10,10);
fill(255);
rect(246,140,10,10);
fill(0);
rect(256,140,10,10);
fill(#272727);
rect(266,140,10,10);
fill(255);
rect(276,140,10,10);
fill(#272727);
rect(286,140,10,10);
fill(0);
rect(296,140,10,10);
fill(255);
rect(306,140,10,10);
fill(#272727);
rect(316,140,10,10);
fill(255);
rect(326,140,10,10);
fill(0);
rect(336,140,10,10);
fill(#FF0000);
rect(356,140,10,10);

//fila 9
fill(0);
rect(216,150,10,10);
fill(255);
rect(226,150,10,10);
rect(236,150,10,10);
fill(#272727);
rect(246,150,10,10);
rect(256,150,10,10);
rect(266,150,10,10);
fill(255);
rect(276,150,10,10);
fill(#272727);
rect(286,150,10,10);
rect(296,150,10,10);
rect(306,150,10,10);
fill(255);
rect(316,150,10,10);
rect(326,150,10,10);
fill(0);
rect(336,150,10,10);

//fila 10
fill(0);
rect(216,160,10,10);
fill(255);
rect(226,160,10,10);
rect(236,160,10,10);
rect(246,160,10,10);
rect(256,160,10,10);
fill(#DEB786);
rect(266,160,10,10);
rect(276,160,10,10);
rect(286,160,10,10);
fill(255);
rect(296,160,10,10);
rect(306,160,10,10);
rect(316,160,10,10);
rect(326,160,10,10);
fill(0);
rect(336,160,10,10);

//fila 11
fill(0);
rect(226,170,10,10);
fill(255);
rect(236,170,10,10);
rect(246,170,10,10);
rect(256,170,10,10);
rect(266,170,10,10);
rect(276,170,10,10);
rect(286,170,10,10);
rect(296,170,10,10);
rect(306,170,10,10);
rect(316,170,10,10);
fill(0);
rect(326,170,10,10);

//fila 12
fill(0);
rect(226,180,10,10);
fill(255);
rect(236,180,10,10);
rect(246,180,10,10);
rect(256,180,10,10);
fill(#DEB786);
rect(266,180,10,10);
rect(276,180,10,10);
rect(286,180,10,10);
fill(255);
rect(296,180,10,10);
rect(306,180,10,10);
rect(316,180,10,10);
fill(0);
rect(326,180,10,10);

//fila 12
fill(0);
rect(186,190,10,10);
rect(196,190,10,10);
rect(206,190,10,10);
rect(236,190,10,10);
fill(255);
rect(246,190,10,10);
fill(#DEB786);
rect(256,190,10,10);
rect(266,190,10,10);
rect(276,190,10,10);
rect(286,190,10,10);
rect(296,190,10,10);
fill(255);
rect(306,190,10,10);
fill(0);
rect(316,190,10,10);
rect(346,190,10,10);
rect(356,190,10,10);
rect(366,190,10,10);

//fila 13
fill(0);
rect(176,200,10,10);
rect(186,200,10,10);
rect(196,200,10,10);
rect(206,200,10,10);
rect(216,200,10,10);
rect(226,200,10,10);
rect(236,200,10,10);
rect(246,200,10,10);
fill(#DEB786);
rect(256,200,10,10);
rect(266,200,10,10);
rect(276,200,10,10);
rect(286,200,10,10);
rect(296,200,10,10);
fill(0);
rect(306,200,10,10);
rect(316,200,10,10);
rect(326,200,10,10);
rect(336,200,10,10);
rect(346,200,10,10);
rect(356,200,10,10);
rect(366,200,10,10);
rect(376,200,10,10);

//fila 14
fill(0);
rect(166,210,10,10);
rect(176,210,10,10);
rect(186,210,10,10);
rect(196,210,10,10);
rect(206,210,10,10);
rect(216,210,10,10);
rect(226,210,10,10);
rect(236,210,10,10);
rect(246,210,10,10);
rect(256,210,10,10);
rect(266,210,10,10);
rect(276,210,10,10);
rect(286,210,10,10);
rect(296,210,10,10);
rect(306,210,10,10);
rect(316,210,10,10);
rect(326,210,10,10);
rect(336,210,10,10);
rect(346,210,10,10);
rect(356,210,10,10);
rect(366,210,10,10);
rect(376,210,10,10);
rect(386,210,10,10);

//fila 15
fill(0);
rect(156,220,10,10);
rect(166,220,10,10);
rect(176,220,10,10);
rect(186,220,10,10);
rect(196,220,10,10);
rect(206,220,10,10);
rect(216,220,10,10);
rect(226,220,10,10);
rect(236,220,10,10);
rect(246,220,10,10);
rect(256,220,10,10);
rect(266,220,10,10);
rect(276,220,10,10);
rect(286,220,10,10);
rect(296,220,10,10);
rect(306,220,10,10);
rect(316,220,10,10);
rect(326,220,10,10);
rect(336,220,10,10);
rect(346,220,10,10);
rect(356,220,10,10);
rect(366,220,10,10);
rect(376,220,10,10);
rect(386,220,10,10);
rect(396,220,10,10);

//fila 14
fill(0);
rect(156,230,10,10);
rect(166,230,10,10);
rect(176,230,10,10);
rect(186,230,10,10);
rect(196,230,10,10);
rect(206,230,10,10);
rect(216,230,10,10);
rect(226,230,10,10);
rect(236,230,10,10);
rect(246,230,10,10);
rect(256,230,10,10);
rect(266,230,10,10);
rect(276,230,10,10);
rect(286,230,10,10);
rect(296,230,10,10);
rect(306,230,10,10);
rect(316,230,10,10);
rect(326,230,10,10);
rect(336,230,10,10);
rect(346,230,10,10);
rect(356,230,10,10);
rect(366,230,10,10);
rect(376,230,10,10);
rect(386,230,10,10);
rect(396,230,10,10);

//fila 15
fill(0);
rect(156,240,10,10);
rect(166,240,10,10);
rect(176,240,10,10);
rect(186,240,10,10);
rect(196,240,10,10);
rect(206,240,10,10);
rect(216,240,10,10);
rect(226,240,10,10);
rect(236,240,10,10);
rect(246,240,10,10);
rect(256,240,10,10);
rect(266,240,10,10);
rect(276,240,10,10);
rect(286,240,10,10);
rect(296,240,10,10);
rect(306,240,10,10);
rect(316,240,10,10);
rect(326,240,10,10);
rect(336,240,10,10);
rect(346,240,10,10);
rect(356,240,10,10);
rect(366,240,10,10);
rect(376,240,10,10);
rect(386,240,10,10);
rect(396,240,10,10);

//fila 15
fill(0);
rect(156,250,10,10);
rect(166,250,10,10);
rect(176,250,10,10);
rect(186,250,10,10);
rect(196,250,10,10);
rect(206,250,10,10);
rect(216,250,10,10);
rect(226,250,10,10);
rect(236,250,10,10);
rect(246,250,10,10);
rect(256,250,10,10);
rect(266,250,10,10);
rect(276,250,10,10);
rect(286,250,10,10);
rect(296,250,10,10);
rect(306,250,10,10);
rect(316,250,10,10);
rect(326,250,10,10);
rect(336,250,10,10);
rect(346,250,10,10);
rect(356,250,10,10);
rect(366,250,10,10);
rect(376,250,10,10);
rect(386,250,10,10);
rect(396,250,10,10);

//fila 16
fill(0);
rect(166,260,10,10);
rect(176,260,10,10);
rect(186,260,10,10);
rect(196,260,10,10);
rect(216,260,10,10);
rect(226,260,10,10);
rect(236,260,10,10);
rect(246,260,10,10);
rect(256,260,10,10);
rect(266,260,10,10);
rect(276,260,10,10);
rect(286,260,10,10);
rect(296,260,10,10);
rect(306,260,10,10);
rect(316,260,10,10);
rect(326,260,10,10);
rect(336,260,10,10);
rect(356,260,10,10);
rect(366,260,10,10);
rect(376,260,10,10);
rect(386,260,10,10);

//fila 17
fill(0);
rect(156,270,10,10);
rect(166,270,10,10);
rect(176,270,10,10);
rect(186,270,10,10);
rect(196,270,10,10);
rect(226,270,10,10);
rect(236,270,10,10);
rect(246,270,10,10);
rect(256,270,10,10);
rect(266,270,10,10);
rect(276,270,10,10);
rect(286,270,10,10);
rect(296,270,10,10);
rect(306,270,10,10);
rect(316,270,10,10);
rect(326,270,10,10);
rect(356,270,10,10);
rect(366,270,10,10);
rect(376,270,10,10);
rect(386,270,10,10);
rect(396,270,10,10);

//fila 18
fill(0);
rect(156,280,10,10);
rect(166,280,10,10);
rect(176,280,10,10);
rect(186,280,10,10);
rect(196,280,10,10);
rect(206,280,10,10);
rect(216,280,10,10);
rect(226,280,10,10);
fill(#FF0000);
rect(236,280,10,10);
rect(246,280,10,10);
rect(256,280,10,10);
fill(0);
rect(266,280,10,10);
rect(276,280,10,10);
rect(286,280,10,10);
fill(#FF0000);
rect(296,280,10,10);
rect(306,280,10,10);
rect(316,280,10,10);
fill(0);
rect(326,280,10,10);
rect(336,280,10,10);
rect(346,280,10,10);
rect(356,280,10,10);
rect(366,280,10,10);
rect(376,280,10,10);
rect(386,280,10,10);
rect(396,280,10,10);

//fila 19
fill(0);
rect(156,290,10,10);
rect(166,290,10,10);
rect(176,290,10,10);
rect(186,290,10,10);
rect(196,290,10,10);
rect(206,290,10,10);
rect(216,290,10,10);
fill(#FF0000);
rect(226,290,10,10);
rect(236,290,10,10);
rect(246,290,10,10);
rect(256,290,10,10);
fill(0);
rect(266,290,10,10);
rect(276,290,10,10);
rect(286,290,10,10);
fill(#FF0000);
rect(296,290,10,10);
rect(306,290,10,10);
rect(316,290,10,10);
rect(326,290,10,10);
fill(0);
rect(336,290,10,10);
rect(346,290,10,10);
rect(356,290,10,10);
rect(366,290,10,10);
rect(376,290,10,10);
rect(386,290,10,10);
rect(396,290,10,10);

//fila 20
fill(0);
rect(156,300,10,10);
rect(166,300,10,10);
rect(176,300,10,10);
rect(186,300,10,10);
rect(196,300,10,10);
rect(206,300,10,10);
rect(216,300,10,10);
rect(226,300,10,10);
fill(#FF0000);
rect(236,300,10,10);
rect(246,300,10,10);
rect(256,300,10,10);
fill(0);
rect(266,300,10,10);
rect(276,300,10,10);
rect(286,300,10,10);
fill(#FF0000);
rect(296,300,10,10);
rect(306,300,10,10);
rect(316,300,10,10);
fill(0);
rect(326,300,10,10);
rect(336,300,10,10);
rect(346,300,10,10);
rect(356,300,10,10);
rect(366,300,10,10);
rect(376,300,10,10);
rect(386,300,10,10);
rect(396,300,10,10);

//fila 21
fill(0);
rect(166,310,10,10);
rect(176,310,10,10);
rect(186,310,10,10);
rect(196,310,10,10);
rect(206,310,10,10);
rect(226,310,10,10);
rect(236,310,10,10);
rect(246,310,10,10);
rect(256,310,10,10);
rect(266,310,10,10);
rect(276,310,10,10);
rect(286,310,10,10);
rect(296,310,10,10);
rect(306,310,10,10);
rect(316,310,10,10);
rect(326,310,10,10);
rect(346,310,10,10);
rect(356,310,10,10);
rect(366,310,10,10);
rect(376,310,10,10);
rect(386,310,10,10);


//fila 22
fill(0);
rect(226,320,10,10);
fill(#FF0000);
rect(236,320,10,10);
fill(0);
rect(246,320,10,10);
rect(256,320,10,10);
rect(266,320,10,10);
rect(276,320,10,10);
rect(286,320,10,10);
rect(296,320,10,10);
rect(306,320,10,10);
fill(#FF0000);
rect(316,320,10,10);
fill(0);
rect(326,320,10,10);


//fila 23
fill(0);
rect(226,330,10,10);
fill(#FF0000);
rect(236,330,10,10);
rect(246,330,10,10);
rect(256,330,10,10);
rect(266,330,10,10);
rect(276,330,10,10);
rect(286,330,10,10);
rect(296,330,10,10);
rect(306,330,10,10);
rect(316,330,10,10);
fill(0);
rect(326,330,10,10);

//fila 24
fill(0);
rect(216,340,10,10);
rect(226,340,10,10);
rect(236,340,10,10);
fill(#FF0000);
rect(246,340,10,10);
rect(256,340,10,10);
rect(266,340,10,10);
rect(276,340,10,10);
rect(286,340,10,10);
rect(296,340,10,10);
rect(306,340,10,10);
rect(316,340,10,10);
fill(0);
rect(326,340,10,10);
rect(336,340,10,10);

//fila 25
fill(0);
rect(216,350,10,10);
rect(226,350,10,10);
rect(236,350,10,10);
rect(246,350,10,10);
rect(256,350,10,10);
rect(266,350,10,10);
rect(276,350,10,10);
rect(286,350,10,10);
rect(296,350,10,10);
rect(306,350,10,10);
fill(#FF0000);
rect(316,350,10,10);
rect(326,350,10,10);
fill(0);
rect(336,350,10,10);


//fila 26
fill(0);
rect(216,360,10,10);
rect(226,360,10,10);
rect(236,360,10,10);
rect(246,360,10,10);
rect(256,360,10,10);
rect(266,360,10,10);
rect(276,360,10,10);
rect(286,360,10,10);
rect(296,360,10,10);
rect(306,360,10,10);
fill(#FF0000);
rect(316,360,10,10);
rect(326,360,10,10);
fill(0);
rect(336,360,10,10);

//fila 27
fill(0);
rect(206,370,10,10);
rect(216,370,10,10);
rect(226,370,10,10);
rect(236,370,10,10);
rect(246,370,10,10);
rect(256,370,10,10);
rect(266,370,10,10);
rect(286,370,10,10);
rect(296,370,10,10);
rect(306,370,10,10);
fill(#FF0000);
rect(316,370,10,10);
fill(0);
rect(326,370,10,10);
fill(#FF0000);
rect(336,370,10,10);
fill(0);
rect(346,370,10,10);

//fila 28
fill(0);
rect(206,380,10,10);
rect(216,380,10,10);
rect(226,380,10,10);
rect(236,380,10,10);
rect(246,380,10,10);
rect(256,380,10,10);
rect(296,380,10,10);
rect(306,380,10,10);
fill(#FF0000);
rect(316,380,10,10);
fill(0);
rect(326,380,10,10);
fill(#FF0000);
rect(336,380,10,10);
fill(0);
rect(346,380,10,10);

//fila 29
fill(0);
rect(206,390,10,10);
rect(216,390,10,10);
rect(226,390,10,10);
rect(236,390,10,10);
rect(246,390,10,10);
rect(256,390,10,10);
rect(296,390,10,10);
rect(306,390,10,10);
fill(#FF0000);
rect(316,390,10,10);
fill(0);
rect(326,390,10,10);
fill(#FF0000);
rect(336,390,10,10);
fill(0);
rect(346,390,10,10);

//fila 30
fill(0);
rect(206,400,10,10);
rect(216,400,10,10);
rect(226,400,10,10);
rect(236,400,10,10);
rect(246,400,10,10);
rect(256,400,10,10);
rect(296,400,10,10);
rect(306,400,10,10);
fill(#FF0000);
rect(316,400,10,10);
fill(0);
rect(326,400,10,10);
fill(#FF0000);
rect(336,400,10,10);
fill(0);
rect(346,400,10,10);

//fila 31
fill(0);
rect(206,410,10,10);
rect(216,410,10,10);
rect(226,410,10,10);
rect(236,410,10,10);
rect(246,410,10,10);
rect(256,410,10,10);
rect(296,410,10,10);
rect(306,410,10,10);
rect(316,410,10,10);
rect(326,410,10,10);
rect(336,410,10,10);
rect(346,410,10,10);

//fila 32
fill(0);
rect(206,420,10,10);
rect(216,420,10,10);
rect(226,420,10,10);
rect(236,420,10,10);
rect(246,420,10,10);
rect(256,420,10,10);
rect(296,420,10,10);
rect(306,420,10,10);
rect(316,420,10,10);
rect(326,420,10,10);
rect(336,420,10,10);
rect(346,420,10,10);

//fila 33
fill(0);
rect(206,430,10,10);
rect(216,430,10,10);
rect(226,430,10,10);
rect(236,430,10,10);
rect(246,430,10,10);
rect(256,430,10,10);
rect(296,430,10,10);
rect(306,430,10,10);
rect(316,430,10,10);
rect(326,430,10,10);
rect(336,430,10,10);
rect(346,430,10,10);

//fila 34
fill(0);
rect(206,440,10,10);
rect(216,440,10,10);
rect(226,440,10,10);
rect(236,440,10,10);
rect(246,440,10,10);
rect(256,440,10,10);
rect(296,440,10,10);
rect(306,440,10,10);
rect(316,440,10,10);
rect(326,440,10,10);
rect(336,440,10,10);
rect(346,440,10,10);

//fila 35
fill(0);
rect(206,450,10,10);
rect(216,450,10,10);
rect(226,450,10,10);
rect(236,450,10,10);
rect(246,450,10,10);
rect(256,450,10,10);
rect(296,450,10,10);
rect(306,450,10,10);
rect(316,450,10,10);
rect(326,450,10,10);
rect(336,450,10,10);
rect(346,450,10,10);

//fila 36
fill(0);
rect(196,460,10,10);
fill(#FF0000);
rect(206,460,10,10);
rect(216,460,10,10);
rect(226,460,10,10);
rect(236,460,10,10);
rect(246,460,10,10);
fill(0);
rect(256,460,10,10);
rect(296,460,10,10);
fill(#FF0000);
rect(306,460,10,10);
rect(316,460,10,10);
rect(326,460,10,10);
rect(336,460,10,10);
rect(346,460,10,10);
fill(0);
rect(356,460,10,10);

//fila 37
fill(0);
rect(186,470,10,10);
rect(196,470,10,10);
rect(206,470,10,10);
rect(216,470,10,10);
rect(226,470,10,10);
rect(236,470,10,10);
rect(246,470,10,10);
rect(256,470,10,10);
rect(296,470,10,10);
rect(306,470,10,10);
rect(316,470,10,10);
rect(326,470,10,10);
rect(336,470,10,10);
rect(346,470,10,10);
rect(356,470,10,10);
rect(366,470,10,10);

//fila 38
fill(0);
rect(176,480,10,10);
rect(186,480,10,10);
rect(196,480,10,10);
rect(206,480,10,10);
rect(216,480,10,10);
rect(226,480,10,10);
rect(236,480,10,10);
rect(246,480,10,10);
rect(256,480,10,10);
rect(296,480,10,10);
rect(306,480,10,10);
rect(316,480,10,10);
rect(326,480,10,10);
rect(336,480,10,10);
rect(346,480,10,10);
rect(356,480,10,10);
rect(366,480,10,10);
rect(376,480,10,10);

//fila 39
fill(0);
rect(176,490,10,10);
rect(186,490,10,10);
rect(196,490,10,10);
rect(206,490,10,10);
rect(216,490,10,10);
rect(226,490,10,10);
rect(236,490,10,10);
rect(246,490,10,10);
rect(256,490,10,10);
rect(296,490,10,10);
rect(306,490,10,10);
rect(316,490,10,10);
rect(326,490,10,10);
rect(336,490,10,10);
rect(346,490,10,10);
rect(356,490,10,10);
rect(366,490,10,10);
rect(376,490,10,10);

break;
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
case 3:
noStroke();
//fila -4
fill(0);
rect(276,10,10,10);
fill(0);
rect(276,20,10,10);
fill(0);
rect(266,30,10,10);
fill(#E5BF1F);
rect(276,30,10,10);
fill(0);
rect(286,30,10,10);

//fila -3
fill(0);
rect(266,40,10,10);
fill(#E5BF1F);
rect(276,40,10,10);
fill(0);
rect(286,40,10,10);

//fila -2
fill(0);
rect(266,50,10,10);
fill(#FF0000);
rect(276,50,10,10);
fill(0);
rect(286,50,10,10);

//fila -1
fill(0);
rect(266,60,10,10);
fill(#FF0000);
rect(276,60,10,10);
fill(0);
rect(286,60,10,10);
  
//fila 1
fill(0);
rect(246,70,10,10);
fill(0);
rect(256,70,10,10);
fill(0);
rect(266,70,10,10);
fill(#FF0000);
rect(276,70,10,10);
fill(0);
rect(286,70,10,10);
fill(0);
rect(296,70,10,10);
fill(0);
rect(306,70,10,10);

//fila 2
fill(0);
rect(236,80,10,10);
fill(255);
rect(246,80,10,10);
rect(256,80,10,10);
fill(0);
rect(266,80,10,10);
fill(#FF0000);
rect(276,80,10,10);
fill(0);
rect(286,80,10,10);
fill(255);
rect(296,80,10,10);
rect(306,80,10,10);
fill(0);
rect(316,80,10,10);

//fila 3
fill(0);
rect(226,90,10,10);
fill(255);
rect(236,90,10,10);
rect(246,90,10,10);
rect(256,90,10,10);
rect(266,90,10,10);
fill(0);
rect(276,90,10,10);
fill(255);
rect(286,90,10,10);
rect(296,90,10,10);
rect(306,90,10,10);
rect(316,90,10,10);
fill(0);
rect(326,90,10,10);

//fila 4
fill(0);
rect(216,100,10,10);
fill(255);
rect(226,100,10,10);
rect(236,100,10,10);
rect(246,100,10,10);
rect(256,100,10,10);
rect(266,100,10,10);
rect(276,100,10,10);
rect(286,100,10,10);
rect(296,100,10,10);
rect(306,100,10,10);
rect(316,100,10,10);
rect(326,100,10,10);
fill(0);
rect(336,100,10,10);

//fila 5
fill(0);
rect(216,110,10,10);
fill(255);
rect(226,110,10,10);
fill(#7A217E);
rect(236,110,10,10);
fill(255);
rect(246,110,10,10);
rect(256,110,10,10);
rect(266,110,10,10);
rect(276,110,10,10);
rect(286,110,10,10);
rect(296,110,10,10);
rect(306,110,10,10);
fill(#7A217E);
rect(316,110,10,10);
fill(255);
rect(326,110,10,10);
fill(0);
rect(336,110,10,10);

//fila 6
fill(0);
rect(216,120,10,10);
fill(255);
rect(226,120,10,10);
fill(#7A217E);
rect(236,120,10,10);
rect(246,120,10,10);
fill(255);
rect(256,120,10,10);
rect(266,120,10,10);
rect(276,120,10,10);
rect(286,120,10,10);
rect(296,120,10,10);
fill(#7A217E);
rect(306,120,10,10);
rect(316,120,10,10);
fill(255);
rect(326,120,10,10);
fill(0);
rect(336,120,10,10);

//fila 7
fill(0);
rect(216,130,10,10);
fill(255);
rect(226,130,10,10);
fill(#7A217E);
rect(236,130,10,10);
rect(246,130,10,10);
rect(256,130,10,10);
rect(266,130,10,10);
fill(255);
rect(276,130,10,10);
fill(#7A217E);
rect(286,130,10,10);
rect(296,130,10,10);
rect(306,130,10,10);
rect(316,130,10,10);
fill(255);
rect(326,130,10,10);
fill(0);
rect(336,130,10,10);

//fila 8
fill(0);
rect(216,140,10,10);
fill(255);
rect(226,140,10,10);
fill(#7A217E);
rect(236,140,10,10);
fill(255);
rect(246,140,10,10);
fill(0);
rect(256,140,10,10);
fill(#7A217E);
rect(266,140,10,10);
fill(255);
rect(276,140,10,10);
fill(#7A217E);
rect(286,140,10,10);
fill(0);
rect(296,140,10,10);
fill(255);
rect(306,140,10,10);
fill(#7A217E);
rect(316,140,10,10);
fill(255);
rect(326,140,10,10);
fill(0);
rect(336,140,10,10);

//fila 9
fill(0);
rect(216,150,10,10);
fill(255);
rect(226,150,10,10);
fill(#7A217E);
rect(236,150,10,10);
rect(246,150,10,10);
rect(256,150,10,10);
fill(255);
rect(266,150,10,10);
rect(276,150,10,10);
rect(286,150,10,10);
fill(#7A217E);
rect(296,150,10,10);
rect(306,150,10,10);
rect(316,150,10,10);
fill(255);
rect(326,150,10,10);
fill(0);
rect(336,150,10,10);

//fila 10
fill(0);
rect(216,160,10,10);
fill(255);
rect(226,160,10,10);
rect(236,160,10,10);
fill(#7A217E);
rect(246,160,10,10);
fill(255);
rect(256,160,10,10);
fill(#FF0000);
rect(266,160,10,10);
rect(276,160,10,10);
rect(286,160,10,10);
fill(255);
rect(296,160,10,10);
fill(#7A217E);
rect(306,160,10,10);
fill(255);
rect(316,160,10,10);
rect(326,160,10,10);
fill(0);
rect(336,160,10,10);

//fila 11
fill(0);
rect(226,170,10,10);
fill(255);
rect(236,170,10,10);
rect(246,170,10,10);
fill(0);
rect(256,170,10,10);
fill(255);
rect(266,170,10,10);
rect(276,170,10,10);
rect(286,170,10,10);
fill(0);
rect(296,170,10,10);
fill(255);
rect(306,170,10,10);
rect(316,170,10,10);
fill(0);
rect(326,170,10,10);

//fila 12
fill(0);
rect(226,180,10,10);
fill(255);
rect(236,180,10,10);
rect(246,180,10,10);
rect(256,180,10,10);
fill(0);
rect(266,180,10,10);
rect(276,180,10,10);
rect(286,180,10,10);
fill(255);
rect(296,180,10,10);
rect(306,180,10,10);
rect(316,180,10,10);
fill(0);
rect(326,180,10,10);

//fila 12
fill(0);
rect(186,190,10,10);
fill(0);
rect(196,190,10,10);
fill(0);
rect(206,190,10,10);
fill(0);
rect(236,190,10,10);
fill(255);
rect(246,190,10,10);
rect(256,190,10,10);
fill(#FF0000);
rect(266,190,10,10);
rect(276,190,10,10);
rect(286,190,10,10);
fill(255);
rect(296,190,10,10);
rect(306,190,10,10);
fill(0);
rect(316,190,10,10);
fill(0);
rect(346,190,10,10);
fill(0);
rect(356,190,10,10);
fill(0);
rect(366,190,10,10);

//fila 13
fill(0);
rect(176,200,10,10);
fill(#DEB786);
rect(186,200,10,10);
rect(196,200,10,10);
rect(206,200,10,10);
fill(0);
rect(216,200,10,10);
rect(226,200,10,10);
fill(#DEB786);
rect(236,200,10,10);
fill(0);
rect(246,200,10,10);
fill(255);
rect(256,200,10,10);
fill(#FF0000);
rect(266,200,10,10);
rect(276,200,10,10);
rect(286,200,10,10);
fill(255);
rect(296,200,10,10);
fill(0);
rect(306,200,10,10);
fill(#DEB786);
rect(316,200,10,10);
fill(0);
rect(326,200,10,10);
rect(336,200,10,10);
fill(#DEB786);
rect(346,200,10,10);
rect(356,200,10,10);
rect(366,200,10,10);
fill(0);
rect(376,200,10,10);

//fila 14
fill(0);
rect(166,210,10,10);
fill(#DEB786);
rect(176,210,10,10);
rect(186,210,10,10);
rect(196,210,10,10);
rect(206,210,10,10);
fill(0);
rect(216,210,10,10);
rect(226,210,10,10);
fill(#DEB786);
rect(236,210,10,10);
rect(246,210,10,10);
fill(0);
rect(256,210,10,10);
fill(#FF0000);
rect(266,210,10,10);
rect(276,210,10,10);
rect(286,210,10,10);
fill(0);
rect(296,210,10,10);
fill(#DEB786);
rect(306,210,10,10);
rect(316,210,10,10);
fill(0);
rect(326,210,10,10);
rect(336,210,10,10);
fill(#DEB786);
rect(346,210,10,10);
rect(356,210,10,10);
rect(366,210,10,10);
rect(376,210,10,10);
fill(0);
rect(386,210,10,10);

//fila 15
fill(0);
rect(156,220,10,10);
fill(#DEB786);
rect(166,220,10,10);
rect(176,220,10,10);
rect(186,220,10,10);
rect(196,220,10,10);
rect(206,220,10,10);
fill(0);
rect(216,220,10,10);
rect(226,220,10,10);
rect(236,220,10,10);
fill(#DEB786);
rect(246,220,10,10);
rect(256,220,10,10);
rect(266,220,10,10);
fill(#FF0000);
rect(276,220,10,10);
fill(#DEB786);
rect(286,220,10,10);
rect(296,220,10,10);
rect(306,220,10,10);
fill(0);
rect(316,220,10,10);
rect(326,220,10,10);
rect(336,220,10,10);
fill(#DEB786);
rect(346,220,10,10);
rect(356,220,10,10);
rect(366,220,10,10);
rect(376,220,10,10);
rect(386,220,10,10);
fill(0);
rect(396,220,10,10);

//fila 14
fill(0);
rect(156,230,10,10);
fill(#DEB786);
rect(166,230,10,10);
rect(176,230,10,10);
rect(186,230,10,10);
fill(0);
rect(196,230,10,10);
rect(206,230,10,10);
rect(216,230,10,10);
rect(226,230,10,10);
rect(236,230,10,10);
rect(246,230,10,10);
rect(256,230,10,10);
rect(266,230,10,10);
rect(276,230,10,10);
rect(286,230,10,10);
rect(296,230,10,10);
rect(306,230,10,10);
rect(316,230,10,10);
rect(326,230,10,10);
rect(336,230,10,10);
rect(346,230,10,10);
rect(356,230,10,10);
fill(#DEB786);
rect(366,230,10,10);
rect(376,230,10,10);
rect(386,230,10,10);
fill(0);
rect(396,230,10,10);

//fila 15
fill(0);
rect(156,240,10,10);
fill(#DEB786);
rect(166,240,10,10);
rect(176,240,10,10);
rect(186,240,10,10);
rect(196,240,10,10);
fill(0);
rect(206,240,10,10);
rect(216,240,10,10);
rect(226,240,10,10);
rect(236,240,10,10);
rect(246,240,10,10);
fill(#FF0000);
rect(256,240,10,10);
rect(266,240,10,10);
fill(0);
rect(276,240,10,10);
fill(#FF0000);
rect(286,240,10,10);
rect(296,240,10,10);
fill(0);
rect(306,240,10,10);
rect(316,240,10,10);
rect(326,240,10,10);
rect(336,240,10,10);
rect(346,240,10,10);
fill(#DEB786);
rect(356,240,10,10);
rect(366,240,10,10);
rect(376,240,10,10);
rect(386,240,10,10);
fill(0);
rect(396,240,10,10);

//fila 15
fill(0);
rect(156,250,10,10);
fill(#DEB786);
rect(166,250,10,10);
rect(176,250,10,10);
rect(186,250,10,10);
rect(196,250,10,10);
fill(0);
rect(206,250,10,10);
rect(216,250,10,10);
rect(226,250,10,10);
rect(236,250,10,10);
fill(#FF0000);
rect(246,250,10,10);
fill(255);
rect(256,250,10,10);
rect(266,250,10,10);
fill(#FF0000);
rect(276,250,10,10);
fill(255);
rect(286,250,10,10);
rect(296,250,10,10);
fill(#FF0000);
rect(306,250,10,10);
fill(0);
rect(316,250,10,10);
rect(326,250,10,10);
rect(336,250,10,10);
rect(346,250,10,10);
fill(#DEB786);
rect(356,250,10,10);
rect(366,250,10,10);
rect(376,250,10,10);
rect(386,250,10,10);
fill(0);
rect(396,250,10,10);

//fila 16
fill(0);
rect(156,260,10,10);
fill(#DEB786);
rect(166,260,10,10);
rect(176,260,10,10);
rect(186,260,10,10);
fill(0);
rect(196,260,10,10);
fill(0);
rect(216,260,10,10);
rect(226,260,10,10);
rect(236,260,10,10);
rect(246,260,10,10);
fill(#FF0000);
rect(256,260,10,10);
rect(266,260,10,10);
fill(0);
rect(276,260,10,10);
fill(#FF0000);
rect(286,260,10,10);
rect(296,260,10,10);
fill(0);
rect(306,260,10,10);
rect(316,260,10,10);
rect(326,260,10,10);
rect(336,260,10,10);
fill(0);
rect(356,260,10,10);
fill(#DEB786);
rect(366,260,10,10);
rect(376,260,10,10);
rect(386,260,10,10);
fill(0);
rect(396,260,10,10);

//fila 17
fill(0);
rect(166,270,10,10);
fill(#DEB786);
rect(176,270,10,10);
fill(0);
rect(186,270,10,10);
rect(226,270,10,10);
rect(236,270,10,10);
fill(#FF0000);
rect(246,270,10,10);
rect(256,270,10,10);
fill(0);
rect(266,270,10,10);
fill(#FF0000);
rect(276,270,10,10);
rect(286,270,10,10);
rect(296,270,10,10);
fill(0);
rect(306,270,10,10);
rect(316,270,10,10);
rect(326,270,10,10);
fill(0);
rect(366,270,10,10);
fill(#DEB786);
rect(376,270,10,10);
fill(0);
rect(386,270,10,10);

//fila 18
fill(0);
rect(166,280,10,10);
fill(#DEB786);
rect(176,280,10,10);
fill(0);
rect(186,280,10,10);
fill(0);
rect(226,280,10,10);
rect(236,280,10,10);
fill(#FF0000);
rect(246,280,10,10);
rect(256,280,10,10);
rect(266,280,10,10);
rect(276,280,10,10);
rect(286,280,10,10);
fill(0);
rect(296,280,10,10);
rect(306,280,10,10);
rect(316,280,10,10);
rect(326,280,10,10);
fill(0);
rect(366,280,10,10);
fill(#DEB786);
rect(376,280,10,10);
fill(0);
rect(386,280,10,10);

//fila 19
fill(0);
rect(156,290,10,10);
fill(#DEB786);
rect(166,290,10,10);
rect(176,290,10,10);
rect(186,290,10,10);
fill(0);
rect(196,290,10,10);
rect(226,290,10,10);
rect(236,290,10,10);
rect(246,290,10,10);
fill(#FF0000);
rect(256,290,10,10);
rect(266,290,10,10);
fill(0);
rect(276,290,10,10);
rect(286,290,10,10);
rect(296,290,10,10);
rect(306,290,10,10);
rect(316,290,10,10);
fill(0);
rect(326,290,10,10);
rect(356,290,10,10);
fill(#DEB786);
rect(366,290,10,10);
rect(376,290,10,10);
rect(386,290,10,10);
fill(0);
rect(396,290,10,10);

//fila 20
fill(0);
rect(156,300,10,10);
fill(#E5BF1F);
rect(166,300,10,10);
rect(176,300,10,10);
fill(#7A217E);
rect(186,300,10,10);
fill(0);
rect(196,300,10,10);
rect(226,300,10,10);
rect(236,300,10,10);
rect(246,300,10,10);
rect(256,300,10,10);
rect(266,300,10,10);
rect(276,300,10,10);
rect(286,300,10,10);
rect(296,300,10,10);
rect(306,300,10,10);
rect(316,300,10,10);
rect(326,300,10,10);
rect(356,300,10,10);
fill(#7A217E);
rect(366,300,10,10);
fill(#E5BF1F);
rect(376,300,10,10);
rect(386,300,10,10);
fill(0);
rect(396,300,10,10);

//fila 21
fill(0);
rect(156,310,10,10);
fill(#7A217E);
rect(166,310,10,10);
fill(#E5BF1F);
rect(176,310,10,10);
rect(186,310,10,10);
fill(0);
rect(196,310,10,10);
rect(226,310,10,10);
rect(236,310,10,10);
rect(246,310,10,10);
rect(256,310,10,10);
rect(266,310,10,10);
rect(276,310,10,10);
rect(286,310,10,10);
rect(296,310,10,10);
rect(306,310,10,10);
rect(316,310,10,10);
rect(326,310,10,10);
rect(356,310,10,10);
fill(#E5BF1F);
rect(366,310,10,10);
rect(376,310,10,10);
fill(#7A217E);
rect(386,310,10,10);
fill(0);
rect(396,310,10,10);

//fila 22
fill(0);
rect(156,320,10,10);
fill(#E5BF1F);
rect(166,320,10,10);
rect(176,320,10,10);
fill(0);
rect(186,320,10,10);
rect(226,320,10,10);
rect(236,320,10,10);
rect(246,320,10,10);
rect(256,320,10,10);
rect(266,320,10,10);
rect(276,320,10,10);
rect(286,320,10,10);
rect(296,320,10,10);
rect(306,320,10,10);
rect(316,320,10,10);
rect(326,320,10,10);
rect(366,320,10,10);
fill(#E5BF1F);
rect(376,320,10,10);
rect(386,320,10,10);
fill(0);
rect(396,320,10,10);

//fila 23
fill(0);
rect(166,330,10,10);
fill(#7A217E);
rect(176,330,10,10);
fill(0);
rect(186,330,10,10);
rect(226,330,10,10);
fill(#181919);
rect(236,330,10,10);
rect(246,330,10,10);
fill(0);
rect(256,330,10,10);
rect(266,330,10,10);
rect(276,330,10,10);
rect(286,330,10,10);
rect(296,330,10,10);
fill(#181919);
rect(306,330,10,10);
rect(316,330,10,10);
fill(0);
rect(326,330,10,10);
rect(366,330,10,10);
fill(#7A217E);
rect(376,330,10,10);
fill(0);
rect(386,330,10,10);

//fila 24
fill(0);
rect(156,340,10,10);
fill(#DEB786);
rect(166,340,10,10);
rect(176,340,10,10);
rect(186,340,10,10);
fill(0);
rect(196,340,10,10);
rect(216,340,10,10);
fill(#181919);
rect(226,340,10,10);
fill(#E5BF1F);
rect(236,340,10,10);
fill(#181919);
rect(246,340,10,10);
fill(0);
rect(256,340,10,10);
fill(#7A217E);
rect(266,340,10,10);
rect(276,340,10,10);
rect(286,340,10,10);
fill(0);
rect(296,340,10,10);
fill(#181919);
rect(306,340,10,10);
fill(#E5BF1F);
rect(316,340,10,10);
fill(#181919);
rect(326,340,10,10);
fill(0);
rect(336,340,10,10);
rect(356,340,10,10);
fill(#DEB786);
rect(366,340,10,10);
rect(376,340,10,10);
rect(386,340,10,10);
fill(0);
rect(396,340,10,10);


//fila 25
fill(0);
rect(156,350,10,10);
fill(#DEB786);
rect(166,350,10,10);
fill(0);
rect(176,350,10,10);
fill(#DEB786);
rect(186,350,10,10);
fill(0);
rect(196,350,10,10);
rect(216,350,10,10);
fill(#7A217E);
rect(226,350,10,10);
rect(236,350,10,10);
rect(246,350,10,10);
fill(0);
rect(256,350,10,10);
fill(#7A217E);
rect(266,350,10,10);
rect(276,350,10,10);
rect(286,350,10,10);
fill(0);
rect(296,350,10,10);
fill(#7A217E);
rect(306,350,10,10);
rect(316,350,10,10);
rect(326,350,10,10);
fill(0);
rect(336,350,10,10);
rect(356,350,10,10);
fill(#DEB786);
rect(366,350,10,10);
fill(0);
rect(376,350,10,10);
fill(#DEB786);
rect(386,350,10,10);
fill(0);
rect(396,350,10,10);

//fila 26
fill(0);
rect(156,360,10,10);
fill(#DEB786);
rect(166,360,10,10);
rect(176,360,10,10);
fill(0);
rect(186,360,10,10);
rect(216,360,10,10);
fill(#7A217E);
rect(226,360,10,10);
fill(#E5BF1F);
rect(236,360,10,10);
fill(0);
rect(246,360,10,10);
fill(#7A217E);
rect(256,360,10,10);
fill(255);
rect(266,360,10,10);
fill(#7A217E);
rect(276,360,10,10);
fill(#FF0000);
rect(286,360,10,10);
fill(#7A217E);
rect(296,360,10,10);
fill(0);
rect(306,360,10,10);
fill(#E5BF1F);
rect(316,360,10,10);
fill(#7A217E);
rect(326,360,10,10);
fill(0);
rect(336,360,10,10);
rect(366,360,10,10);
fill(#DEB786);
rect(376,360,10,10);
rect(386,360,10,10);
fill(0);
rect(396,360,10,10);

//fila 27
fill(0);
rect(166,370,10,10);
rect(176,370,10,10);
rect(206,370,10,10);
fill(#7A217E);
rect(216,370,10,10);
fill(#E5BF1F);
rect(226,370,10,10);
fill(#7A217E);
rect(236,370,10,10);
fill(0);
rect(246,370,10,10);
fill(#7A217E);
rect(256,370,10,10);
fill(255);
rect(266,370,10,10);
fill(#7A217E);
rect(276,370,10,10);
fill(#FF0000);
rect(286,370,10,10);
fill(#7A217E);
rect(296,370,10,10);
fill(0);
rect(306,370,10,10);
fill(#7A217E);
rect(316,370,10,10);
fill(#E5BF1F);
rect(326,370,10,10);
fill(0);
rect(336,370,10,10);
rect(376,370,10,10);
rect(386,370,10,10);

//fila 28
fill(0);
rect(206,380,10,10);
fill(#7A217E);
rect(216,380,10,10);
rect(226,380,10,10);
rect(236,380,10,10);
fill(0);
rect(246,380,10,10);
fill(255);
rect(256,380,10,10);
rect(266,380,10,10);
fill(#7A217E);
rect(276,380,10,10);
fill(#FF0000);
rect(286,380,10,10);
rect(296,380,10,10);
fill(0);
rect(306,380,10,10);
fill(#7A217E);
rect(316,380,10,10);
rect(326,380,10,10);
rect(336,380,10,10);
fill(0);
rect(346,380,10,10);


//fila 29
fill(0);
rect(206,390,10,10);
fill(#E5BF1F);
rect(216,390,10,10);
fill(#7A217E);
rect(226,390,10,10);
fill(0);
rect(236,390,10,10);
fill(#7A217E);
rect(246,390,10,10);
rect(256,390,10,10);
rect(266,390,10,10);
rect(276,390,10,10);
rect(286,390,10,10);
rect(296,390,10,10);
rect(306,390,10,10);
fill(0);
rect(316,390,10,10);
fill(#7A217E);
rect(326,390,10,10);
fill(#E5BF1F);
rect(336,390,10,10);
fill(0);
rect(346,390,10,10);

//fila 30
fill(0);
rect(206,400,10,10);
fill(#7A217E);
rect(216,400,10,10);
fill(#E5BF1F);
rect(226,400,10,10);
fill(0);
rect(236,400,10,10);
rect(246,400,10,10);
rect(256,400,10,10);
rect(266,400,10,10);
rect(286,400,10,10);
rect(296,400,10,10);
rect(306,400,10,10);
rect(316,400,10,10);
fill(#E5BF1F);
rect(326,400,10,10);
fill(#7A217E);
rect(336,400,10,10);
fill(0);
rect(346,400,10,10);

//fila 31
fill(0);
rect(206,410,10,10);
fill(#7A217E);
rect(216,410,10,10);
rect(226,410,10,10);
rect(236,410,10,10);
rect(246,410,10,10);
fill(0);
rect(256,410,10,10);
rect(296,410,10,10);
fill(#7A217E);
rect(306,410,10,10);
rect(316,410,10,10);
rect(326,410,10,10);
rect(336,410,10,10);
fill(0);
rect(346,410,10,10);

//fila 32
fill(0);
rect(206,420,10,10);
rect(216,420,10,10);
rect(226,420,10,10);
rect(236,420,10,10);
rect(246,420,10,10);
rect(256,420,10,10);
rect(296,420,10,10);
rect(306,420,10,10);
rect(316,420,10,10);
rect(326,420,10,10);
rect(336,420,10,10);
rect(346,420,10,10);

//fila 33
fill(0);
rect(206,430,10,10);
fill(#FFFF00);
rect(216,430,10,10);
rect(226,430,10,10);
rect(236,430,10,10);
rect(246,430,10,10);
fill(0);
rect(256,430,10,10);
rect(296,430,10,10);
fill(#FFFF00);
rect(306,430,10,10);
rect(316,430,10,10);
rect(326,430,10,10);
rect(336,430,10,10);
fill(0);
rect(346,430,10,10);

//fila 34
fill(0);
rect(206,440,10,10);
rect(216,440,10,10);
rect(226,440,10,10);
fill(#FFFF00);
rect(236,440,10,10);
rect(246,440,10,10);
fill(0);
rect(256,440,10,10);
rect(296,440,10,10);
fill(#FFFF00);
rect(306,440,10,10);
rect(316,440,10,10);
fill(0);
rect(326,440,10,10);
rect(336,440,10,10);
rect(346,440,10,10);

//fila 35
fill(0);
rect(206,450,10,10);
fill(#FFFF00);
rect(216,450,10,10);
rect(226,450,10,10);
rect(236,450,10,10);
rect(246,450,10,10);
fill(0);
rect(256,450,10,10);
rect(296,450,10,10);
fill(#FFFF00);
rect(306,450,10,10);
rect(316,450,10,10);
rect(326,450,10,10);
rect(336,450,10,10);
fill(0);
rect(346,450,10,10);

//fila 36
fill(0);
rect(196,460,10,10);
fill(#FFFF00);
rect(206,460,10,10);
fill(0);
rect(216,460,10,10);
rect(226,460,10,10);
fill(#FFFF00);
rect(236,460,10,10);
rect(246,460,10,10);
fill(0);
rect(256,460,10,10);
rect(296,460,10,10);
fill(#FFFF00);
rect(306,460,10,10);
rect(316,460,10,10);
fill(0);
rect(326,460,10,10);
rect(336,460,10,10);
fill(#FFFF00);
rect(346,460,10,10);
fill(0);
rect(356,460,10,10);

//fila 37
fill(0);
rect(186,470,10,10);
fill(#FFFF00);
rect(196,470,10,10);
rect(206,470,10,10);
rect(216,470,10,10);
rect(226,470,10,10);
rect(236,470,10,10);
rect(246,470,10,10);
fill(0);
rect(256,470,10,10);
rect(296,470,10,10);
fill(#FFFF00);
rect(306,470,10,10);
rect(316,470,10,10);
rect(326,470,10,10);
rect(336,470,10,10);
rect(346,470,10,10);
rect(356,470,10,10);
fill(0);
rect(366,470,10,10);

//fila 38
fill(0);
rect(176,480,10,10);
fill(#FFFF00);
rect(186,480,10,10);
rect(196,480,10,10);
rect(206,480,10,10);
rect(216,480,10,10);
rect(226,480,10,10);
rect(236,480,10,10);
rect(246,480,10,10);
fill(0);
rect(256,480,10,10);
rect(296,480,10,10);
fill(#FFFF00);
rect(306,480,10,10);
rect(316,480,10,10);
rect(326,480,10,10);
rect(336,480,10,10);
rect(346,480,10,10);
rect(356,480,10,10);
rect(366,480,10,10);
fill(0);
rect(376,480,10,10);

//fila 39
fill(0);
rect(176,490,10,10);
rect(186,490,10,10);
rect(196,490,10,10);
rect(206,490,10,10);
rect(216,490,10,10);
rect(226,490,10,10);
rect(236,490,10,10);
rect(246,490,10,10);
rect(256,490,10,10);
rect(296,490,10,10);
rect(306,490,10,10);
rect(316,490,10,10);
rect(326,490,10,10);
rect(336,490,10,10);
rect(346,490,10,10);
rect(356,490,10,10);
rect(366,490,10,10);
rect(376,490,10,10);
break;
///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
case 4:

break;
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
    }
  }
 
 void Dibujar1(){
    switch(mascara){
    case 4:
    noStroke();
//fila 1
fill(0);
rect(246,70,10,10);
rect(256,70,10,10);
rect(266,70,10,10);
rect(276,70,10,10);
rect(286,70,10,10);
rect(296,70,10,10);
rect(306,70,10,10);

//fila 2
fill(0);
rect(126,80,10,10);
rect(156,80,10,10);
rect(236,80,10,10);
fill(255);
rect(246,80,10,10);
rect(256,80,10,10);
rect(266,80,10,10);
fill(0);
rect(276,80,10,10);
fill(255);
rect(286,80,10,10);
rect(296,80,10,10);
rect(306,80,10,10);
fill(0);
rect(316,80,10,10);

//fila 3
fill(0);
rect(126,90,10,10);
rect(156,90,10,10);
rect(226,90,10,10);
fill(255);
rect(236,90,10,10);
rect(246,90,10,10);
rect(256,90,10,10);
rect(266,90,10,10);
fill(0);
rect(276,90,10,10);
fill(255);
rect(286,90,10,10);
rect(296,90,10,10);
rect(306,90,10,10);
rect(316,90,10,10);
fill(0);
rect(326,90,10,10);

//fila 4
fill(0);
rect(126,100,10,10);
rect(136,100,10,10);
rect(146,100,10,10);
rect(156,100,10,10);
rect(216,100,10,10);
fill(#FF0000);
rect(226,100,10,10);
fill(255);
rect(236,100,10,10);
fill(#FF0000);
rect(246,100,10,10);
fill(255);
rect(256,100,10,10);
fill(0);
rect(266,100,10,10);
rect(276,100,10,10);
rect(286,100,10,10);
fill(255);
rect(296,100,10,10);
fill(#FF0000);
rect(306,100,10,10);
fill(255);
rect(316,100,10,10);
fill(#FF0000);
rect(326,100,10,10);
fill(0);
rect(336,100,10,10);

//fila 5
fill(0);
rect(126,110,10,10);
fill(#DEB786);
rect(136,110,10,10);
rect(146,110,10,10);
fill(0);
rect(156,110,10,10);
rect(176,110,10,10);
rect(216,110,10,10);
fill(255);
rect(226,110,10,10);
rect(236,110,10,10);
rect(246,110,10,10);
rect(256,110,10,10);
rect(266,110,10,10);
fill(0);
rect(276,110,10,10);
fill(255);
rect(286,110,10,10);
rect(296,110,10,10);
rect(306,110,10,10);
rect(316,110,10,10);
rect(326,110,10,10);
fill(0);
rect(336,110,10,10);

//fila 6
fill(0);
rect(126,120,10,10);
fill(#DEB786);
rect(136,120,10,10);
rect(146,120,10,10);
fill(0);
rect(156,120,10,10);
rect(166,120,10,10);
rect(176,120,10,10);
rect(216,120,10,10);
fill(255);
rect(226,120,10,10);
rect(236,120,10,10);
rect(246,120,10,10);
rect(256,120,10,10);
rect(266,120,10,10);
rect(276,120,10,10);
rect(286,120,10,10);
rect(296,120,10,10);
rect(306,120,10,10);
rect(316,120,10,10);
rect(326,120,10,10);
fill(0);
rect(336,120,10,10);

//fila 7
fill(0);
rect(126,130,10,10);
fill(#DEB786);
rect(136,130,10,10);
rect(146,130,10,10);
rect(156,130,10,10);
fill(0);
rect(166,130,10,10);
rect(216,130,10,10);
fill(255);
rect(226,130,10,10);
fill(0);
rect(236,130,10,10);
rect(246,130,10,10);
rect(256,130,10,10);
rect(266,130,10,10);
fill(255);
rect(276,130,10,10);
fill(0);
rect(286,130,10,10);
rect(296,130,10,10);
rect(306,130,10,10);
rect(316,130,10,10);
fill(255);
rect(326,130,10,10);
fill(0);
rect(336,130,10,10);

//fila 8
fill(0);
rect(136,140,10,10);
rect(146,140,10,10);
rect(156,140,10,10);
rect(216,140,10,10);
fill(255);
rect(226,140,10,10);
fill(0);
rect(236,140,10,10);
fill(255);
rect(246,140,10,10);
rect(256,140,10,10);
fill(0);
rect(266,140,10,10);
fill(255);
rect(276,140,10,10);
fill(0);
rect(286,140,10,10);
fill(255);
rect(296,140,10,10);
rect(306,140,10,10);
fill(0);
rect(316,140,10,10);
fill(255);
rect(326,140,10,10);
fill(0);
rect(336,140,10,10);

//fila 9
fill(0);
rect(126,150,10,10);
rect(136,150,10,10);
rect(146,150,10,10);
rect(156,150,10,10);
rect(216,150,10,10);
fill(255);
rect(226,150,10,10);
fill(0);
rect(236,150,10,10);
rect(246,150,10,10);
rect(256,150,10,10);
rect(266,150,10,10);
fill(#DEB786);
rect(276,150,10,10);
fill(0);
rect(286,150,10,10);
rect(296,150,10,10);
rect(306,150,10,10);
rect(316,150,10,10);
fill(255);
rect(326,150,10,10);
fill(0);
rect(336,150,10,10);

//fila 10
fill(0);
rect(126,160,10,10);
rect(136,160,10,10);
rect(146,160,10,10);
rect(156,160,10,10);
rect(216,160,10,10);
fill(255);
rect(226,160,10,10);
fill(0);
rect(236,160,10,10);
fill(255);
rect(246,160,10,10);
fill(0);
rect(256,160,10,10);
fill(#DEB786);
rect(266,160,10,10);
rect(276,160,10,10);
rect(286,160,10,10);
fill(0);
rect(296,160,10,10);
fill(255);
rect(306,160,10,10);
fill(0);
rect(316,160,10,10);
fill(255);
rect(326,160,10,10);
fill(0);
rect(336,160,10,10);

//fila 11
fill(0);
rect(126,170,10,10);
rect(136,170,10,10);
rect(146,170,10,10);
rect(156,170,10,10);
rect(166,170,10,10);
rect(226,170,10,10);
rect(236,170,10,10);
fill(255);
rect(246,170,10,10);
fill(0);
rect(256,170,10,10);
fill(255);
rect(266,170,10,10);
rect(276,170,10,10);
rect(286,170,10,10);
fill(0);
rect(296,170,10,10);
fill(255);
rect(306,170,10,10);
fill(0);
rect(316,170,10,10);
rect(326,170,10,10);

//fila 11
fill(0);
rect(126,180,10,10);
fill(#DEB786);
rect(136,180,10,10);
rect(146,180,10,10);
rect(156,180,10,10);
fill(0);
rect(166,180,10,10);
rect(226,180,10,10);
fill(255);
rect(236,180,10,10);
rect(246,180,10,10);
fill(0);
rect(256,180,10,10);
fill(#DEB786);
rect(266,180,10,10);
rect(276,180,10,10);
rect(286,180,10,10);
fill(0);
rect(296,180,10,10);
fill(255);
rect(306,180,10,10);
rect(316,180,10,10);
fill(0);
rect(326,180,10,10);

//fila 12
fill(0);
rect(126,190,10,10);
fill(#DEB786);
rect(136,190,10,10);
rect(146,190,10,10);
rect(156,190,10,10);
fill(0);
rect(166,190,10,10);
rect(176,190,10,10);
rect(186,190,10,10);
rect(196,190,10,10);
rect(206,190,10,10);
rect(236,190,10,10);
fill(255);
rect(246,190,10,10);
rect(256,190,10,10);
rect(266,190,10,10);
rect(276,190,10,10);
rect(286,190,10,10);
rect(296,190,10,10);
rect(306,190,10,10);
fill(0);
rect(316,190,10,10);
rect(346,190,10,10);
rect(356,190,10,10);
rect(366,190,10,10);

//fila 13
fill(0);
rect(126,200,10,10);
fill(#DEB786);
rect(136,200,10,10);
rect(146,200,10,10);
rect(156,200,10,10);
fill(0);
rect(166,200,10,10);
fill(#deb786);
rect(176,200,10,10);
rect(186,200,10,10);
rect(196,200,10,10);
rect(206,200,10,10);
fill(0);
rect(216,200,10,10);
rect(226,200,10,10);
fill(#DEB786);
rect(236,200,10,10);
fill(0);
rect(246,200,10,10);
fill(255);
rect(256,200,10,10);
rect(266,200,10,10);
rect(276,200,10,10);
rect(286,200,10,10);
rect(296,200,10,10);
fill(0);
rect(306,200,10,10);
fill(#DEB786);
rect(316,200,10,10);
fill(0);
rect(326,200,10,10);
rect(336,200,10,10);
fill(#DEB786);
rect(346,200,10,10);
rect(356,200,10,10);
rect(366,200,10,10);
fill(0);
rect(376,200,10,10);

//fila 14
fill(0);
rect(126,210,10,10);
fill(#DEB786);
rect(136,210,10,10);
rect(146,210,10,10);
rect(156,210,10,10);
rect(166,210,10,10);
rect(176,210,10,10);
rect(186,210,10,10);
rect(196,210,10,10);
rect(206,210,10,10);
rect(216,210,10,10);
rect(226,210,10,10);
rect(236,210,10,10);
rect(246,210,10,10);
fill(0);
rect(256,210,10,10);
rect(266,210,10,10);
rect(276,210,10,10);
rect(286,210,10,10);
rect(296,210,10,10);
fill(#deb786);
rect(306,210,10,10);
rect(316,210,10,10);
rect(326,210,10,10);
rect(336,210,10,10);
rect(346,210,10,10);
rect(356,210,10,10);
rect(366,210,10,10);
rect(376,210,10,10);
fill(0);
rect(386,210,10,10);

//fila 14
fill(0);
rect(136,220,10,10);
rect(146,220,10,10);
fill(#DEB786);
rect(156,220,10,10);
rect(166,220,10,10);
rect(176,220,10,10);
rect(186,220,10,10);
rect(196,220,10,10);
rect(206,220,10,10);
rect(216,220,10,10);
rect(226,220,10,10);
rect(236,220,10,10);
rect(246,220,10,10);
rect(256,220,10,10);
rect(266,220,10,10);
rect(276,220,10,10);
rect(286,220,10,10);
rect(296,220,10,10);
rect(306,220,10,10);
rect(316,220,10,10);
rect(326,220,10,10);
rect(336,220,10,10);
rect(346,220,10,10);
rect(356,220,10,10);
rect(366,220,10,10);
rect(376,220,10,10);
rect(386,220,10,10);
fill(0);
rect(396,220,10,10);

//fila 14
fill(0);
rect(156,230,10,10);
rect(166,230,10,10);
rect(176,230,10,10);
rect(186,230,10,10);
rect(196,230,10,10);
fill(#DEB786);
rect(206,230,10,10);
rect(216,230,10,10);
rect(226,230,10,10);
rect(236,230,10,10);
rect(246,230,10,10);
rect(256,230,10,10);
rect(266,230,10,10);
fill(0);
rect(276,230,10,10);
fill(#DEB786);
rect(286,230,10,10);
rect(296,230,10,10);
rect(306,230,10,10);
rect(316,230,10,10);
rect(326,230,10,10);
rect(336,230,10,10);
rect(346,230,10,10);
rect(356,230,10,10);
rect(366,230,10,10);
rect(376,230,10,10);
rect(386,230,10,10);
fill(0);
rect(396,230,10,10);

//fila 15
fill(0);
rect(206,240,10,10);
fill(#DEB786);
rect(216,240,10,10);
rect(226,240,10,10);
rect(236,240,10,10);
rect(246,240,10,10);
rect(256,240,10,10);
rect(266,240,10,10);
fill(0);
rect(276,240,10,10);
fill(#DEB786);
rect(286,240,10,10);
rect(296,240,10,10);
rect(306,240,10,10);
rect(316,240,10,10);
rect(326,240,10,10);
rect(336,240,10,10);
fill(0);
rect(346,240,10,10);
fill(#DEB786);
rect(356,240,10,10);
rect(366,240,10,10);
rect(376,240,10,10);
rect(386,240,10,10);
fill(0);
rect(396,240,10,10);

//fila 15
fill(0);
rect(206,250,10,10);
fill(#DEB786);
rect(216,250,10,10);
fill(#846951);
rect(226,250,10,10);
fill(#DEB786);
rect(236,250,10,10);
rect(246,250,10,10);
rect(256,250,10,10);
rect(266,250,10,10);
fill(0);
rect(276,250,10,10);
fill(#DEB786);
rect(286,250,10,10);
rect(296,250,10,10);
rect(306,250,10,10);
rect(316,250,10,10);
fill(#846951);
rect(326,250,10,10);
fill(#DEB786);
rect(336,250,10,10);
fill(0);
rect(346,250,10,10);
fill(#DEB786);
rect(356,250,10,10);
rect(366,250,10,10);
rect(376,250,10,10);
rect(386,250,10,10);
fill(0);
rect(396,250,10,10);

//fila 16
fill(0);
rect(216,260,10,10);
fill(#DEB786);
rect(226,260,10,10);
rect(236,260,10,10);
rect(246,260,10,10);
rect(256,260,10,10);
rect(266,260,10,10);
fill(0);
rect(276,260,10,10);
fill(#DEB786);
rect(286,260,10,10);
rect(296,260,10,10);
rect(306,260,10,10);
rect(316,260,10,10);
rect(326,260,10,10);
fill(0);
rect(336,260,10,10);
rect(356,260,10,10);
fill(#DEB786);
rect(366,260,10,10);
rect(376,260,10,10);
rect(386,260,10,10);
fill(0);
rect(396,260,10,10);

//fila 17
fill(0);
rect(226,270,10,10);
rect(236,270,10,10);
rect(246,270,10,10);
rect(256,270,10,10);
rect(266,270,10,10);
fill(#DEB786);
rect(276,270,10,10);
fill(0);
rect(286,270,10,10);
rect(296,270,10,10);
rect(306,270,10,10);
rect(316,270,10,10);
rect(326,270,10,10);
rect(366,270,10,10);
fill(#DEB786);
rect(376,270,10,10);
fill(0);
rect(386,270,10,10);

//fila 18
fill(0);
rect(226,280,10,10);
fill(#DEB786);
rect(236,280,10,10);
rect(246,280,10,10);
rect(256,280,10,10);
rect(266,280,10,10);
rect(276,280,10,10);
rect(286,280,10,10);
rect(296,280,10,10);
rect(306,280,10,10);
rect(316,280,10,10);
fill(0);
rect(326,280,10,10);
rect(366,280,10,10);
fill(#DEB786);
rect(376,280,10,10);
fill(0);
rect(386,280,10,10);

//fila 19
fill(0);
rect(226,290,10,10);
fill(#DEB786);
rect(236,290,10,10);
fill(#DEB786);
rect(246,290,10,10);
rect(256,290,10,10);
rect(266,290,10,10);
rect(276,290,10,10);
rect(286,290,10,10);
rect(296,290,10,10);
rect(306,290,10,10);
rect(316,290,10,10);
fill(0);
rect(326,290,10,10);
rect(356,290,10,10);
fill(#DEB786);
rect(366,290,10,10);
rect(376,290,10,10);
rect(386,290,10,10);
fill(0);
rect(396,290,10,10);

//fila 20
fill(0);
rect(226,300,10,10);
fill(#DEB786);
rect(236,300,10,10);
rect(246,300,10,10);
rect(256,300,10,10);
rect(266,300,10,10);
rect(276,300,10,10);
rect(286,300,10,10);
rect(296,300,10,10);
rect(306,300,10,10);
rect(316,300,10,10);
fill(0);
rect(326,300,10,10);
rect(356,300,10,10);
rect(366,300,10,10);
rect(376,300,10,10);
rect(386,300,10,10);
rect(396,300,10,10);

//fila 21
fill(0);
rect(226,310,10,10);
fill(#DEB786);
rect(236,310,10,10);
rect(246,310,10,10);
rect(256,310,10,10);
rect(266,310,10,10);
fill(#846951);
rect(276,310,10,10);
fill(#DEB786);
rect(286,310,10,10);
rect(296,310,10,10);
rect(306,310,10,10);
rect(316,310,10,10);
fill(0);
rect(326,310,10,10);
rect(356,310,10,10);
rect(366,310,10,10);
rect(376,310,10,10);
rect(386,310,10,10);
rect(396,310,10,10);

//fila 22
fill(0);
rect(226,320,10,10);
rect(236,320,10,10);
fill(#DEB786);
rect(246,320,10,10);
rect(256,320,10,10);
rect(266,320,10,10);
rect(276,320,10,10);
rect(286,320,10,10);
rect(296,320,10,10);
rect(306,320,10,10);
fill(0);
rect(316,320,10,10);
rect(326,320,10,10);
rect(366,320,10,10);
rect(376,320,10,10);
rect(386,320,10,10);
fill(0);
rect(396,320,10,10);

//fila 23
fill(0);
rect(226,330,10,10);
fill(#ff0000);
rect(236,330,10,10);
fill(0);
rect(246,330,10,10);
rect(256,330,10,10);
rect(266,330,10,10);
rect(276,330,10,10);
rect(286,330,10,10);
rect(296,330,10,10);
rect(306,330,10,10);
fill(#ff0000);
rect(316,330,10,10);
fill(0);
rect(326,330,10,10);
rect(366,330,10,10);
rect(376,330,10,10);
rect(386,330,10,10);

//fila 24
fill(0);
rect(216,340,10,10);
rect(226,340,10,10);
fill(#ff0000);
rect(236,340,10,10);
rect(246,340,10,10);
rect(256,340,10,10);
rect(266,340,10,10);
rect(276,340,10,10);
rect(286,340,10,10);
rect(296,340,10,10);
rect(306,340,10,10);
rect(316,340,10,10);
fill(0);
rect(326,340,10,10);
rect(336,340,10,10);
rect(356,340,10,10);
fill(#DEB786);
rect(366,340,10,10);
rect(376,340,10,10);
rect(386,340,10,10);
fill(0);
rect(396,340,10,10);


//fila 23
fill(0);
rect(216,350,10,10);
rect(226,350,10,10);
rect(236,350,10,10);
rect(246,350,10,10);
rect(256,350,10,10);
rect(266,350,10,10);
rect(276,350,10,10);
rect(286,350,10,10);
rect(296,350,10,10);
rect(306,350,10,10);
rect(316,350,10,10);
rect(326,350,10,10);
rect(336,350,10,10);
rect(356,350,10,10);
fill(#DEB786);
rect(366,350,10,10);
fill(0);
rect(376,350,10,10);
fill(#DEB786);
rect(386,350,10,10);
fill(0);
rect(396,350,10,10);

//fila 24
fill(0);
rect(216,360,10,10);
fill(#ff0000);
rect(226,360,10,10);
fill(0);
rect(236,360,10,10);
rect(246,360,10,10);
rect(256,360,10,10);
rect(266,360,10,10);
rect(276,360,10,10);
rect(286,360,10,10);
rect(296,360,10,10);
rect(306,360,10,10);
rect(316,360,10,10);
fill(#ff0000);
rect(326,360,10,10);
fill(0);
rect(336,360,10,10);
rect(366,360,10,10);
fill(#DEB786);
rect(376,360,10,10);
rect(386,360,10,10);
fill(0);
rect(396,360,10,10);

//fila 25
fill(0);
rect(206,370,10,10);
rect(216,370,10,10);
fill(#ff0000);
rect(226,370,10,10);
fill(0);
rect(236,370,10,10);
rect(246,370,10,10);
rect(256,370,10,10);
rect(266,370,10,10);
rect(286,370,10,10);
rect(296,370,10,10);
rect(306,370,10,10);
rect(316,370,10,10);
fill(#ff0000);
rect(326,370,10,10);
fill(0);
rect(336,370,10,10);
rect(346,370,10,10);
rect(376,370,10,10);
rect(386,370,10,10);

//fila 26
fill(0);
rect(206,380,10,10);
fill(#ff0000);
rect(216,380,10,10);
rect(226,380,10,10);
rect(236,380,10,10);
fill(0);
rect(246,380,10,10);
rect(256,380,10,10);
rect(296,380,10,10);
rect(306,380,10,10);
fill(#ff0000);
rect(316,380,10,10);
rect(326,380,10,10);
rect(336,380,10,10);
fill(0);
rect(346,380,10,10);

//fila 26
fill(0);
rect(206,390,10,10);
rect(216,390,10,10);
fill(#ff0000);
rect(226,390,10,10);
fill(0);
rect(236,390,10,10);
rect(246,390,10,10);
rect(256,390,10,10);
rect(296,390,10,10);
rect(306,390,10,10);
rect(316,390,10,10);
fill(#ff0000);
rect(326,390,10,10);
fill(0);
rect(336,390,10,10);
rect(346,390,10,10);

//fila 27
fill(0);
rect(206,400,10,10);
rect(216,400,10,10);
rect(226,400,10,10);
rect(236,400,10,10);
rect(246,400,10,10);
rect(256,400,10,10);
rect(296,400,10,10);
rect(306,400,10,10);
rect(316,400,10,10);
rect(326,400,10,10);
rect(336,400,10,10);
rect(346,400,10,10);

//fila 28
fill(0);
rect(206,410,10,10);
fill(#FF0000);
rect(216,410,10,10);
rect(226,410,10,10);
rect(236,410,10,10);
rect(246,410,10,10);
fill(0);
rect(256,410,10,10);
rect(296,410,10,10);
fill(#ff0000);
rect(306,410,10,10);
rect(316,410,10,10);
rect(326,410,10,10);
rect(336,410,10,10);
fill(0);
rect(346,410,10,10);

//fila 29
fill(0);
rect(206,420,10,10);
rect(216,420,10,10);
rect(226,420,10,10);
rect(236,420,10,10);
rect(246,420,10,10);
rect(256,420,10,10);
rect(296,420,10,10);
rect(306,420,10,10);
rect(316,420,10,10);
rect(326,420,10,10);
rect(336,420,10,10);
rect(346,420,10,10);

//fila 30
fill(0);
rect(206,430,10,10);
rect(216,430,10,10);
rect(226,430,10,10);
rect(236,430,10,10);
rect(246,430,10,10);
rect(256,430,10,10);
rect(296,430,10,10);
rect(306,430,10,10);
rect(316,430,10,10);
rect(326,430,10,10);
rect(336,430,10,10);
rect(346,430,10,10);

//fila 31
fill(0);
rect(206,440,10,10);
fill(255);
rect(216,440,10,10);
rect(226,440,10,10);
fill(0);
rect(236,440,10,10);
rect(246,440,10,10);
rect(256,440,10,10);
rect(296,440,10,10);
rect(306,440,10,10);
rect(316,440,10,10);
fill(255);
rect(326,440,10,10);
rect(336,440,10,10);
fill(0);
rect(346,440,10,10);

//fila 32
fill(0);
rect(206,450,10,10);
rect(216,450,10,10);
rect(226,450,10,10);
rect(236,450,10,10);
rect(246,450,10,10);
rect(256,450,10,10);
rect(296,450,10,10);
rect(306,450,10,10);
rect(316,450,10,10);
rect(326,450,10,10);
rect(336,450,10,10);
rect(346,450,10,10);

//fila 33
fill(0);
rect(196,460,10,10);
rect(206,460,10,10);
fill(255);
rect(216,460,10,10);
rect(226,460,10,10);
fill(0);
rect(236,460,10,10);
rect(246,460,10,10);
rect(256,460,10,10);
rect(296,460,10,10);
rect(306,460,10,10);
rect(316,460,10,10);
fill(255);
rect(326,460,10,10);
rect(336,460,10,10);
fill(0);
rect(346,460,10,10);
rect(356,460,10,10);

//fila 34
fill(0);
rect(186,470,10,10);
rect(196,470,10,10);
rect(206,470,10,10);
rect(216,470,10,10);
rect(226,470,10,10);
rect(236,470,10,10);
rect(246,470,10,10);
rect(256,470,10,10);
rect(296,470,10,10);
rect(306,470,10,10);
rect(316,470,10,10);
rect(326,470,10,10);
rect(336,470,10,10);
rect(346,470,10,10);
rect(356,470,10,10);
rect(366,470,10,10);

//fila 35
fill(0);
rect(176,480,10,10);
rect(186,480,10,10);
rect(196,480,10,10);
rect(206,480,10,10);
rect(216,480,10,10);
rect(226,480,10,10);
rect(236,480,10,10);
rect(246,480,10,10);
rect(256,480,10,10);
rect(296,480,10,10);
rect(306,480,10,10);
rect(316,480,10,10);
rect(326,480,10,10);
rect(336,480,10,10);
rect(346,480,10,10);
rect(356,480,10,10);
rect(366,480,10,10);
rect(376,480,10,10);

//fila 36
fill(0);
rect(176,490,10,10);
rect(186,490,10,10);
rect(196,490,10,10);
rect(206,490,10,10);
rect(216,490,10,10);
rect(226,490,10,10);
rect(236,490,10,10);
rect(246,490,10,10);
rect(256,490,10,10);
rect(296,490,10,10);
rect(306,490,10,10);
rect(316,490,10,10);
rect(326,490,10,10);
rect(336,490,10,10);
rect(346,490,10,10);
rect(356,490,10,10);
rect(366,490,10,10);
rect(376,490,10,10);
    break;
    }
 }
}
void inicio(){
background(0);
fill(#ff0000);
textFont(titulo);
textSize(150);
text("Maestros del",320,230);
text("Cuadrilatero",340,350);
rect(320,235,618,5);
rect(320,355,618,5);
textFont(subtitulo);
textSize(70);
text("Rudos vs. Tecnicos",440,470);
textFont(general);
fill(255);
textSize(17);
text("Click para continuar",500,630);
if(mousePressed){
pantalla=1;
  }
}


void instrucciones(){

background(0);
fill(#ff0000);
textFont(general);
text("INSTRUCCIONES",460,100);
textFont(subtitulo);
text("Jugador 1",110,210);
textFont(general);
text("GOLPE = A",110,300);
text("PATADA = S",110,400);
text("ATAQUE",110,500);
text("ESPECIAL  =  X",110,550);
textFont(subtitulo);
text("Jugador 2",880,210);
textFont(general);
text("GOLPE = L",880,300);
text("PATADA = K",880,400);
text("ATAQUE",880,500);
text("ESPECIAL  =  M",880,550);
textFont(subtitulo);
textSize(40);
text("<Cada 4 turnos>",110,600);
text("<Cada 4 turnos>",880,600);
textFont(general);
fill(255);
textSize(15);
text("Pulsa cualquier tecla para continuar",410,670);
if(keyPressed){
    pantalla=2;
  
  }
}

void seleccion1(){

background(0);
fill(#ff0000);
textFont(titulo);
textSize(80);
text("Selecciona tu personaje",350,100);
textSize(60);
fill(255);
text("Jugador Uno",550,150);
textSize(50);
fill(#ff0000);
text("El Santo",50,500);
noStroke();
ellipse(211,485,10,10);
ellipse(444,485,10,10);
ellipse(763,485,10,10);
ellipse(1015,485,10,10);
text("Octagon",274,500);
text("Máscara Satánica",470,500);
text("Rey Mysterio",790,500);
text("Psycho Clown",1040,500);
textFont(general);
textSize(15);
fill(255);
text("pulsa 0",50,523);
text("pulsa 1",274,523);
text("pulsa 2",470,523);
text("pulsa 3",790,523);
text("pulsa 4",1040,523);
fill(200);
noStroke();
rect(100,300,20,150);
rect(60,330,100,20);
rect(596,300,20,150);
rect(556,390,100,20);
pushMatrix();
translate(85,320);
quad(250,10,170,50,250,90,330,50);
popMatrix();
fill(0);
noStroke();
ellipse(335,370,65,65);
textFont(general);
fill(200);
text("6",810,350);
text("1",885,400);
text("9",940,460);
triangle(1145,450,1125,380,1165,380);
ellipse(1145,340,27,27);
fill(255);
ellipse(1173,320,33,13);
ellipse(1117,320,33,13);
fill(0);
rect(1144,380,2,40);


if(keyPressed){
  if(key == '0'){
    luch1 = santo;
  luchador1 = 0;
  pantalla=3;  
  }
  else if(key == '1'){
    luch1 = octagon;
  luchador1 = 1;
  pantalla=3;  
  }
  else if(key == '2'){
    luch1 = mascara;
  luchador1 = 2;
  pantalla=3;  
  }
  else if(key == '3'){
    luch1 = mysterio; 
  luchador1 = 3;
  pantalla=3;  
  }
  else if(key == '4'){
    luch1 = psycho;
  luchador1 = 4;
  pantalla=3;  
  }
}

}

void seleccion2(){

background(0);
fill(#ff0000);
textFont(titulo);
textSize(80);
text("Selecciona tu personaje",350,100);
textSize(60);
fill(255);
text("Jugador Dos",550,150);
textSize(50);
fill(#ff0000);
text("El Santo",50,500);
noStroke();
ellipse(211,485,10,10);
ellipse(444,485,10,10);
ellipse(763,485,10,10);
ellipse(1015,485,10,10);
text("Octagon",274,500);
text("Máscara Satánica",470,500);
text("Rey Mysterio",790,500);
text("Psycho Clown",1040,500);
textFont(general);
textSize(15);
fill(255);
text("pulsa 5",50,523);
text("pulsa 6",274,523);
text("pulsa 7",470,523);
text("pulsa 8",790,523);
text("pulsa 9",1040,523);
fill(200);
noStroke();
rect(100,300,20,150);
rect(60,330,100,20);
rect(596,300,20,150);
rect(556,390,100,20);
pushMatrix();
translate(85,320);
quad(250,10,170,50,250,90,330,50);
popMatrix();
fill(0);
noStroke();
ellipse(335,370,65,65);
textFont(general);
fill(200);
text("6",810,350);
text("1",885,400);
text("9",940,460);
triangle(1145,450,1125,380,1165,380);
ellipse(1145,340,27,27);
fill(255);
ellipse(1173,320,33,13);
ellipse(1117,320,33,13);
fill(0);
rect(1144,380,2,40);

if(keyPressed){
  if(key == '5'){
    luch2 = santo;
  luchador2 = 0;
  pantalla=4;  
  }
  else if(key == '6'){
    luch2 = octagon;
  luchador2 = 1;
  pantalla=4;  
  }
  else if(key == '7'){
    luch2 = mascara;
  luchador2 = 2;
  pantalla=4;  
  }
  else if(key == '8'){
    luch2 = mysterio;
  luchador2 = 3;
  pantalla=4;  
  }
  else if(key == '9'){
    luch2 = psycho;
  luchador2 = 4;
  pantalla=4;  
  }
  }
}

void lucha(){
  background(50);
  image(cuadrilatero,0,0);
  if(luchador1 == 0){
    pushMatrix();
    translate(50,100);
    santo.Dibujar();  
    popMatrix();
  }
  else if(luchador1 == 1){
    pushMatrix();
    translate(50,100);
    octagon .Dibujar();  
    popMatrix();
  }
  else if(luchador1 == 2){
    pushMatrix();
    translate(50,100);
    mascara.Dibujar1();  
    popMatrix();
  }
  else if(luchador1 == 3){
    pushMatrix();
    translate(50,100);
    mysterio.Dibujar();  
    popMatrix();
  }
  else if(luchador1 == 4){
    pushMatrix();
    translate(50,100);
    psycho.Dibujar();  
    popMatrix();
  }
  if(luchador2 == 0){
    pushMatrix();
    translate(650,100);
    santo.Dibujar();  
    popMatrix();  
  }
  else if(luchador2 == 1){
    pushMatrix();
    translate(650,100);
    octagon.Dibujar();  
    popMatrix();  
  }
  else if(luchador2 == 2){
    pushMatrix();
    translate(650,100);
    mascara.Dibujar1();  
    popMatrix();  
  }
  else if(luchador2 == 3){
    pushMatrix();
    translate(650,100);
    mysterio.Dibujar();  
    popMatrix();   
  }
  else if(luchador2 == 4){
    pushMatrix();
    translate(650,100);
    psycho.Dibujar();  
    popMatrix();  
  }
/////////////////////////////////////////////////
/////////////////////////////////////////////////

  if(turno == 0){
    if(keyPressed){
      if(key == 'a'){
      luch2.salud = luch2.salud - luch1.golpe1;
      turno = 1;
      contador1++;
      }
      else if(key == 's'){
      luch2.salud = luch2.salud - luch1.golpe2;
      turno = 1;
      contador1++;
      }
      if(luch2.salud <= 0){
      pantalla = 5;
      }
    }
  }
  
  if(turno == 1){
    if(keyPressed){
      if(key == 'l'){
      luch1.salud = luch1.salud - luch2.golpe1;
      turno= 0 ;
      contador2++;
      }
      else if(key == 'k'){
      luch1.salud = luch1.salud - luch2.golpe2;
      turno = 0;
      contador2++;
      }
      if(luch1.salud <= 0){
      pantalla = 5;
      }
    }
  }
  
  if(contador1 == 4){
    fill(#ff0000);
    text("ATAQUE ESPECIAL",200,100);
    if(keyPressed){
      if(key == 'x'){
      luch2.salud = luch2.salud - luch1.golpex;
      turno = 1;
      contador1 = 0;
      }
      if(luch2.salud <= 0){
      pantalla = 5;
   }
}
}
  if(contador2 == 4){
    fill(#ff0000);
    text("ATAQUE ESPECIAL",960,100);
    if(keyPressed){
      if(key == 'm'){
      luch1.salud = luch1.salud - luch2.golpex;
      turno = 0;
      contador2 = 0;
      }
      if(luch1.salud <= 0){
      pantalla = 5;
   }
}
}
    if(turno == 0){
    fill(255);
    text("TU TURNO",10,100);
    }
    else {
    fill(255);
    text("TU TURNO",770,100);
    }
    
    if(turno == 0){
    fill(#4682B4);  
    }
    else{
    fill(#191970);
    }
    quad(0,0,0,70,330,70,350,0);
    
    if(turno == 1){
    fill(#98fb98);
    }
    else{
    fill(#006400);
    }
    quad(760,0,760,70,1099,70,1110,0);
    
    fill(255);
    textSize(20);
    text(luch1.nombre,10,30);
    text(luch2.nombre,770,30);
    if(luch1.salud >= 0 && luch1.salud <= 70){
    fill(#ff0000);
    }
    else if(luch1.salud > 70 && luch1.salud <= 130){
    fill(#ffff00);
    }
    else{
    fill(#00ff00);
    }
    rect(10,50,luch1.salud*2.5,20);
    
    if(luch2.salud >= 0 && luch2.salud <= 70){
    fill(#ff0000);
    }
    else if(luch2.salud > 70 && luch2.salud <= 130){
    fill(#ffff00);
    }
    else{
    fill(#00ff00);
    }
    rect(770,50,luch2.salud*2.5,20);
}



void resultado(){
  
background(0);
fill(#ff0000);
rect(700,100,500,500);
fill(#ff0000);
textFont(titulo);
textSize(90);
text("El ganador es...",50,200);

if(luch1.salud > 0){
textSize(100);
text(luch1.nombre,100,500);
pushMatrix();
translate(450,80);
scale(2);
luch1.Dibujar();
luch1.Dibujar1();
popMatrix();
}
else {
  textSize(100);
text(luch2.nombre,100,500);
pushMatrix();
translate(450,80);
scale(2);
luch2.Dibujar();
luch2.Dibujar1();
popMatrix();
}

}
